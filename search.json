[{"path":[]},{"path":"https://docs.ropensci.org/taxlist/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"contributors maintainers project, pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community. Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://docs.ropensci.org/taxlist/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue packages BugReports make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://docs.ropensci.org/taxlist/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. recommend tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://docs.ropensci.org/taxlist/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note taxlist project released Contributor Code Conduct. contributing project agree abide terms. See rOpenSci contributing guide details.","code":""},{"path":"https://docs.ropensci.org/taxlist/CONTRIBUTING.html","id":"discussion-forum","dir":"","previous_headings":"","what":"Discussion forum","title":"CONTRIBUTING","text":"Check discussion forum question, use case, otherwise bug feature request software . think issue requires longer form discussion.","code":""},{"path":"https://docs.ropensci.org/taxlist/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://docs.ropensci.org/taxlist/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"1. Getting started","title":"Applying taxlist to species lists on diversity records","text":"package taxlist aims implement object class functions (methods) handling taxonomic data R. homonymous object class taxlist can linked biodiversity records (e.g. observations vegetation plots). taxlist package developed repository GitHub (https://github.com/ropensci/taxlist) can installed R-session using package devtools: Since package already available Comprehensive R Archive Network (CRAN), also possible install using function install.packages: course, load taxlist R-session. accessing vignette, use following command:","code":"library(devtools) install_github(\"ropensci/taxlist\", build_vignettes = TRUE) install.packages(\"taxlist\", dependencies = TRUE) library(taxlist) vignette(\"taxlist-intro\")"},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"example-data","dir":"Articles","previous_headings":"2. Extracting a species list from a vegetation table","what":"2.1 Example data","title":"Applying taxlist to species lists on diversity records","text":"One main tasks taxlist structure taxonomic information linkage biodiversity records. structure one side consistent taxonomic issues (e.g. synonyms, hierarchies, etc.), side flexible containing different depth information availability (plain species lists hierarchical structures). guide, work species list phytosociological relevés collected borderline Democratic Republic Congo Rwanda (Mullenders 1953 Vegetatio 4(2): 73–83).  digitized data can loaded following command: data formatted data.frame R, including names species first column:","code":"load(file.path(path.package(\"taxlist\"), \"Cross.rda\")) head(Cross[, 1:8]) ##                 TaxonName 3094 3093 3092 3095 3096 3097 3098 ## 1   Eragrostis tenuifolia    + <NA> <NA> <NA> <NA> <NA> <NA> ## 2        Cyperus sublimis <NA>    + <NA> <NA> <NA> <NA> <NA> ## 3    Digitaria abyssinica    +    1    2    2    2    3    1 ## 4 Hyparrhenia filipendula <NA> <NA> <NA> <NA> <NA> <NA> <NA> ## 5    Erigeron floribundus    +    1 <NA> <NA> <NA> <NA> <NA> ## 6            Aerva lanata    +    1 <NA> <NA> <NA> <NA> <NA>"},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"from-plain-list-to-taxlist","dir":"Articles","previous_headings":"2. Extracting a species list from a vegetation table","what":"2.2 From plain list to taxlist","title":"Applying taxlist to species lists on diversity records","text":"already mentioned, first column cross table contains names species occurring observed plots. Thus, can use character vector construct taxlist object. can achieved function df2taxlist(). Note function summary provides quick overview content resulting object. function can also applied specific taxon:","code":"sp_list <- Cross[, \"TaxonName\"] sp_list <- df2taxlist(x = sp_list) ## Missing column 'TaxonConceptID' in 'x'. All names will be considered as accepted names. summary(sp_list) ## object size: 9 Kb  ## validation of 'taxlist' object: TRUE  ##  ## number of taxon usage names: 35  ## number of taxon concepts: 35  ## trait entries: 0  ## number of trait variables: 0  ## taxon views: 0 summary(object = sp_list, ConceptID = \"Erigeron floribundus\") ## ------------------------------  ## concept ID: 5  ## view ID: none  ## level: none  ## parent: none  ##  ## # accepted name:  ## 5 Erigeron floribundus NA  ## ------------------------------"},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"easplist","dir":"Articles","previous_headings":"3. Built-in data set","what":"3.1 Easplist","title":"Applying taxlist to species lists on diversity records","text":"installation taxlist includes data Easplist, formatted taxlist object. data subset species list used database SWEA-Dataveg (GIVD ID AF-006):","code":"data(Easplist) Easplist ## object size: 761.4 Kb  ## validation of 'taxlist' object: TRUE  ##  ## number of taxon usage names: 5393  ## number of taxon concepts: 3887  ## trait entries: 311  ## number of trait variables: 1  ## taxon views: 3  ##  ## concepts with parents: 3698  ## concepts with children: 1343  ##  ## hierarchical levels: form < variety < subspecies < species < complex < genus < family  ## number of concepts in level form: 2 ## number of concepts in level variety: 95 ## number of concepts in level subspecies: 71 ## number of concepts in level species: 2521 ## number of concepts in level complex: 1 ## number of concepts in level genus: 1011 ## number of concepts in level family: 186"},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"access-to-slots","dir":"Articles","previous_headings":"3. Built-in data set","what":"3.2 Access to slots","title":"Applying taxlist to species lists on diversity records","text":"common ways access content slots S4 objects either using function slot(object, name) symbol @ (.e. object@name). Additional functions, specific taxlist objects taxon_names, taxon_relations, taxon_traits taxon_views (see help documentation). Additionally, possible use methods $ [ , first access information slot taxonTraits, second can also used slots object.","code":"summary(as.factor(Easplist$life_form)) ##   acropleustophyte        chamaephyte     climbing_plant facultative_annual  ##                  8                 25                 25                 20  ##    obligate_annual       phanerophyte   pleustohelophyte         reed_plant  ##                114                 26                  8                 14  ##      reptant_plant      tussock_plant               NA's  ##                 19                 52               3576"},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"subsets","dir":"Articles","previous_headings":"3. Built-in data set","what":"3.3 Subsets","title":"Applying taxlist to species lists on diversity records","text":"Methods function subset also implemented package. subsets usually apply pattern matching (character vectors) logical operations analogous query building relational databases. subset method can apply slot setting value argument slot. results: Similarly, can look specific name.","code":"Papyrus <- subset(x = Easplist, subset = grepl(\"papyrus\", TaxonName), slot = \"names\") summary(Papyrus, \"all\") Papyrus <- subset(x = Easplist, subset = TaxonConceptID == 206, slot = \"relations\") summary(Papyrus, \"all\") Phraaus <- subset(   x = Easplist,   subset = charmatch(\"Phragmites australis\", TaxonName), slot = \"names\" ) summary(Phraaus, \"all\")"},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"hierarchical-structure","dir":"Articles","previous_headings":"3. Built-in data set","what":"3.4 Hierarchical structure","title":"Applying taxlist to species lists on diversity records","text":"Objects belonging class taxlist can optionally content parent-child relationships taxonomic levels. information also included data Easplist, shown summary output. Note information can get lost subset() applied, since respective parents children original data set anymore subset. May like recover parents children, can use functions get_parents() get_children(), respectively. Another way represent taxonomic ranks using function indented_list().","code":"Easplist ## object size: 761.4 Kb  ## validation of 'taxlist' object: TRUE  ##  ## number of taxon usage names: 5393  ## number of taxon concepts: 3887  ## trait entries: 311  ## number of trait variables: 1  ## taxon views: 3  ##  ## concepts with parents: 3698  ## concepts with children: 1343  ##  ## hierarchical levels: form < variety < subspecies < species < complex < genus < family  ## number of concepts in level form: 2 ## number of concepts in level variety: 95 ## number of concepts in level subspecies: 71 ## number of concepts in level species: 2521 ## number of concepts in level complex: 1 ## number of concepts in level genus: 1011 ## number of concepts in level family: 186 summary(Papyrus, \"all\") ## ------------------------------  ## concept ID: 206  ## view ID: 1  ## level: species  ## parent: none  ##  ## # accepted name:  ## 206 Cyperus papyrus L.  ##  ## # synonyms (2):  ## 52612 Cyperus papyrus ssp. antiquorum (Willd.) Chiov.  ## 52613 Cyperus papyrus ssp. nyassicus Chiov.  ## ------------------------------ Papyrus <- get_parents(Easplist, Papyrus) summary(Papyrus, \"all\") ## ------------------------------  ## concept ID: 206  ## view ID: 1  ## level: species  ## parent: 54853 Cyperus L.  ##  ## # accepted name:  ## 206 Cyperus papyrus L.  ##  ## # synonyms (2):  ## 52612 Cyperus papyrus ssp. antiquorum (Willd.) Chiov.  ## 52613 Cyperus papyrus ssp. nyassicus Chiov.  ## ------------------------------  ## concept ID: 54853  ## view ID: 2  ## level: genus  ## parent: 55959 Cyperaceae Juss.  ##  ## # accepted name:  ## 54855 Cyperus L.  ## ------------------------------  ## concept ID: 55959  ## view ID: 3  ## level: family  ## parent: none  ##  ## # accepted name:  ## 55961 Cyperaceae Juss.  ## ------------------------------ indented_list(Papyrus) ## Cyperaceae Juss. ##  Cyperus L. ##    Cyperus papyrus L."},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"example-of-a-phytosociological-classification","dir":"Articles","previous_headings":"4. Applying taxlist to syntaxonomic schemes","what":"4.1 Example of a phytosociological classification","title":"Applying taxlist to species lists on diversity records","text":"illustrate flexibility taxlist objects, next example handle syntaxonomical scheme. example used scheme proposed author aquatic semi-aquatic vegetation Tanzania (Alvarez 2017 Phytocoenologia review). scheme includes 10 associations classified 4 classes:","code":""},{"path":"https://docs.ropensci.org/taxlist/articles/taxlist-intro.html","id":"building-the-taxlist-object","dir":"Articles","previous_headings":"4. Applying taxlist to syntaxonomic schemes","what":"4.2 Building the taxlist object","title":"Applying taxlist to species lists on diversity records","text":"content taxonomic list included data frame can downloaded following command: data frame Concepts contains list syntaxon names considered accepted previous scheme. list used insert new concepts taxlist object. Note function new created empty object (prototype), levels insert custom levels (syntaxonomical hierarchies). later function, levels inserted lower higher ranks. Furthermore reference defining concepts included syntaxonomic scheme inserted object using function taxon_views finally concepts inserted function add_concept. next step inserting names considered synonyms respective syntaxa. Synonyms included data frame Synonyms. Finally, codes provided associations inserted traits properties) slot taxonTraits. instance, may like get parental chain association (e.g. Nymphaeetum loti). Note logical arguments keep_parents keep_children preserve hierarchical information subset: using function subset() just created new object containing association Nymphaeetum loti parental chain. subset used extract parental chain Syntax.","code":"load(file.path(path.package(\"taxlist\"), \"wetlands_syntax.rda\")) head(Concepts) ##   TaxonConceptID Parent                                TaxonName ## 1              1     NA                         Lemnetea minoris ## 2              2      1                 Salvinio-Eichhornietalia ## 3              3      2                       Pistion stratiotes ## 4              4      3 Lemno paucicostatae-Pistietum stratiotes ## 5              5     NA                                Potametea ## 6              6      5                       Nymphaeetalia loti ##                                   AuthorName       Level ## 1    Koch & Tüxen ex den Hartog & Segal 1964       class ## 2 Borhidi ex Borhidi, Muñiz & del Risco 1979       order ## 3                (Schmitz 1971) Schmitz 1988    alliance ## 4                                Lebrun 1947 association ## 5                Klika ex Klika & Novák 1941       class ## 6                                Lebrun 1947       order Concepts$TaxonUsageID <- Concepts$TaxonConceptID  Syntax <- df2taxlist(Concepts) ## No values for 'AcceptedName' in 'x'. all names will be considered as accepted names. levels(Syntax) <- c(\"association\", \"alliance\", \"order\", \"class\")  taxon_views(Syntax) <- data.frame(   ViewID = 1, Secundum = \"Alvarez (2017)\",   Author = \"Alvarez M\", Year = 2017,   Title = \"Classification of aquatic and semi-aquatic vegetation in East Africa\",   stringsAsFactors = FALSE )  Syntax@taxonRelations$ViewID <- 1  Syntax ## object size: 11.2 Kb  ## validation of 'taxlist' object: TRUE  ##  ## number of taxon usage names: 26  ## number of taxon concepts: 26  ## trait entries: 0  ## number of trait variables: 0  ## taxon views: 1  ##  ## concepts with parents: 22  ## concepts with children: 16  ##  ## hierarchical levels: association < alliance < order < class  ## number of concepts in level association: 10 ## number of concepts in level alliance: 7 ## number of concepts in level order: 5 ## number of concepts in level class: 4 head(Synonyms) ##   TaxonConceptID                             TaxonName ## 1              1                          Stratiotetea ## 2              3                  Pistion pantropicale ## 3              8               Utriculario-Nymphaeetum ## 4              8 Utriculario exoletae-Nymphaeetum loti ## 5              9                          Phragmitetea ## 6             10                           Papyretalia ##                   AuthorName ## 1    den Hartog & Segal 1964 ## 2               Schmitz 1971 ## 3 (Lebrun 1947) Léonard 1950 ## 4    Szafranski & Apema 1983 ## 5      Tüxen & Preising 1942 ## 6                Lebrun 1947 Syntax <- add_synonym(Syntax,   ConceptID = Synonyms$TaxonConceptID,   TaxonName = Synonyms$TaxonName, AuthorName = Synonyms$AuthorName ) head(Codes) ##   TaxonConceptID Code ## 1             12  HE1 ## 2             13  HE2 ## 3             14  HE3 ## 4             20  HE4 ## 5             17  HE5 ## 6             18  HE6 taxon_traits(Syntax) <- Codes Syntax ## object size: 13.8 Kb  ## validation of 'taxlist' object: TRUE  ##  ## number of taxon usage names: 37  ## number of taxon concepts: 26  ## trait entries: 10  ## number of trait variables: 1  ## taxon views: 1  ##  ## concepts with parents: 22  ## concepts with children: 16  ##  ## hierarchical levels: association < alliance < order < class  ## number of concepts in level association: 10 ## number of concepts in level alliance: 7 ## number of concepts in level order: 5 ## number of concepts in level class: 4 Nymplot <- subset(Syntax, charmatch(\"Nymphaeetum\", TaxonName), slot = \"names\") summary(Nymplot, \"all\") ## ------------------------------  ## concept ID: 8  ## view ID: 1  ## level: association  ## parent: none  ##  ## # accepted name:  ## 8 Nymphaeetum loti Lebrun 1947  ##  ## # synonyms (2):  ## 29 Utriculario-Nymphaeetum (Lebrun 1947) Léonard 1950  ## 30 Utriculario exoletae-Nymphaeetum loti Szafranski & Apema 1983  ## ------------------------------ Nymplot <- subset(Syntax, charmatch(\"Nymphaeetum\", TaxonName),   slot = \"names\",   keep_parents = TRUE ) summary(Nymplot, \"all\") ## ------------------------------  ## concept ID: 5  ## view ID: 1  ## level: class  ## parent: none  ##  ## # accepted name:  ## 5 Potametea Klika ex Klika & Novák 1941  ## ------------------------------  ## concept ID: 6  ## view ID: 1  ## level: order  ## parent: 5 Potametea Klika ex Klika & Novák 1941  ##  ## # accepted name:  ## 6 Nymphaeetalia loti Lebrun 1947  ## ------------------------------  ## concept ID: 7  ## view ID: 1  ## level: alliance  ## parent: 6 Nymphaeetalia loti Lebrun 1947  ##  ## # accepted name:  ## 7 Nymphaeion loti Lebrun 1947  ## ------------------------------  ## concept ID: 8  ## view ID: 1  ## level: association  ## parent: 7 Nymphaeion loti Lebrun 1947  ##  ## # accepted name:  ## 8 Nymphaeetum loti Lebrun 1947  ##  ## # synonyms (2):  ## 29 Utriculario-Nymphaeetum (Lebrun 1947) Léonard 1950  ## 30 Utriculario exoletae-Nymphaeetum loti Szafranski & Apema 1983  ## ------------------------------ indented_list(Nymplot) ## Potametea Klika ex Klika & Novák 1941 ##  Nymphaeetalia loti Lebrun 1947 ##   Nymphaeion loti Lebrun 1947 ##    Nymphaeetum loti Lebrun 1947"},{"path":"https://docs.ropensci.org/taxlist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miguel Alvarez. Author, maintainer. Zachary Foster. Contributor. Sam Levin. Reviewer. Margaret Siple. Reviewer.","code":""},{"path":"https://docs.ropensci.org/taxlist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alvarez M (????). taxlist: Handling Taxonomic Lists. R package version 0.2.4.9002,  https://github.com/ropensci/taxlist, https://docs.ropensci.org/taxlist/, https://cran.r-project.org/package=taxlist. Alvarez M, Luebert F (2018). “taxlist package: Managing plant taxonomic lists R.” Biodiversity Data Journal, 6, e23635. doi:10.3897/bdj.6.e23635.","code":"@Manual{,   title = {taxlist: Handling Taxonomic Lists},   author = {Miguel Alvarez},   note = {R package version 0.2.4.9002,  https://github.com/ropensci/taxlist, https://docs.ropensci.org/taxlist/},   url = {https://cran.r-project.org/package=taxlist}, } @Article{,   title = {The taxlist package: Managing plant taxonomic lists in R},   doi = {10.3897/bdj.6.e23635},   journal = {Biodiversity Data Journal},   author = {Miguel Alvarez and Federico Luebert},   year = {2018},   volume = {6},   pages = {e23635}, }"},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Handling Taxonomic Lists","text":"taxlist package designed handle assess taxonomic lists R, providing object class functions S4 language. homonymous object class taxlist originally designed module taxa recorded vegetation-plot observations (see vegtable), became independent object ability contain lists species also synonymy, hierarchical taxonomy, functional traits (attributes taxa). main aim package keep consistence taxonomic lists (set rules checked function validObject()), enable re-arrangement data, statistically assess functional traits attributes, instance taxonomy (function tax2traits() set taxonomic information trait). package includes function import taxonomic lists Turboveg, almost data source can structured taxlist object, far information imported data frames R session consistency rules respected (validity). use taxlist recommended people cleaning raw data importing relational databases, either context taxonomic work biodiversity assessments. way around, people relational databases clean structured taxonomic lists may use taxlist recipient information R sessions order carry statistical assessments. Finally, function print_name() makes taxlist suitable implementation interactive documents using rmarkdonw knitr (e.g. reports, manuscripts check-lists). structure taxlist objects inspired structure data handled Turboveg relational databases. Figure: Relational model taxlist objects (see Alvarez & Luebert 2018).","code":""},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"installing-taxlist","dir":"","previous_headings":"","what":"Installing taxlist","title":"Handling Taxonomic Lists","text":"package available Comprehensive R Archive Network (CRAN) can directly installed within R-session: Alternatively, current development version available GitHub can installed using package devtools: vignette installed package introducing work taxlist can accessed following command R-session:","code":"install.packages(\"taxlist\", dependencies = TRUE) library(devtools) install_github(\"ropensci/taxlist\", build_vignette = TRUE) vignette(\"taxlist-intro\")"},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"building-taxlist-objects","dir":"","previous_headings":"","what":"Building taxlist Objects","title":"Handling Taxonomic Lists","text":"Objects can built step--step following example. , use reference “Ferns Chile” (original Spanish: “Helechos de Chile”) Gunkel (1984). create empty taxlist object using function new(): set respective taxonomic ranks. case, levels provided lowest highest hierarchical level: convenience, start inserting taxa respective names top-direction. use function add_concept() add new taxon. Note arguments TaxonName, AuthorName, Level used provide name taxon, authority name taxonomic rank, respectively. see, inserted genus got concept ID 1 (see TaxonConceptID previous figure). insert species genus, use function add_concept(), time also provide ID parent taxon argument Parent. way, can add now two varieties inserted species: may realized function summary() applied provide one side display meta-information whole taxlist object, side show detail taxa included object. later case adding keyword \"\" second argument, summary show detailed information every taxon included object.","code":"library(taxlist)  Fern <- new(\"taxlist\") Fern #> object size: 5.1 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 0  #> number of taxon concepts: 0  #> trait entries: 0  #> number of trait variables: 0  #> taxon views: 0 levels(Fern) <- c(\"variety\", \"species\", \"genus\") Fern <- add_concept(taxlist = Fern, TaxonName = \"Asplenium\", AuthorName = \"L.\", Level = \"genus\") summary(Fern, \"all\") #> ------------------------------  #> concept ID: 1  #> view ID: none  #> level: genus  #> parent: none  #>  #> # accepted name:  #> 1 Asplenium L.  #> ------------------------------ Fern <- add_concept(Fern,   TaxonName = \"Asplenium obliquum\", AuthorName = \"Forster\",   Level = \"species\", Parent = 1 ) summary(Fern, \"Asplenium obliquum\") #> ------------------------------  #> concept ID: 2  #> view ID: none  #> level: species  #> parent: 1 Asplenium L.  #>  #> # accepted name:  #> 2 Asplenium obliquum Forster  #> ------------------------------ Fern <- add_concept(Fern,   TaxonName = c(     \"Asplenium obliquum var. sphenoides\",     \"Asplenium obliquum var. chondrophyllum\"   ),   AuthorName = c(     \"(Kunze) Espinosa\",     \"(Bertero apud Colla) C. Christense & C. Skottsberg\"   ),   Level = \"variety\", Parent = c(2, 2) ) Fern #> object size: 6.2 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 4  #> number of taxon concepts: 4  #> trait entries: 0  #> number of trait variables: 0  #> taxon views: 0  #>  #> concepts with parents: 3  #> concepts with children: 2  #>  #> hierarchical levels: variety < species < genus  #> number of concepts in level variety: 2 #> number of concepts in level species: 1 #> number of concepts in level genus: 1  summary(Fern, \"all\") #> ------------------------------  #> concept ID: 1  #> view ID: none  #> level: genus  #> parent: none  #>  #> # accepted name:  #> 1 Asplenium L.  #> ------------------------------  #> concept ID: 2  #> view ID: none  #> level: species  #> parent: 1 Asplenium L.  #>  #> # accepted name:  #> 2 Asplenium obliquum Forster  #> ------------------------------  #> concept ID: 3  #> view ID: none  #> level: variety  #> parent: 2 Asplenium obliquum Forster  #>  #> # accepted name:  #> 3 Asplenium obliquum var. sphenoides (Kunze) Espinosa  #> ------------------------------  #> concept ID: 4  #> view ID: none  #> level: variety  #> parent: 2 Asplenium obliquum Forster  #>  #> # accepted name:  #> 4 Asplenium obliquum var. chondrophyllum (Bertero apud Colla) C. Christense & C. Skottsberg  #> ------------------------------"},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"indented-lists","dir":"","previous_headings":"","what":"Indented lists","title":"Handling Taxonomic Lists","text":"feature implemented version 0.2.1 function indented_list(), provides better display hierarchical strucutre taxlist objects.","code":"indented_list(Fern) #> Asplenium L. #>  Asplenium obliquum Forster #>   Asplenium obliquum var. sphenoides (Kunze) Espinosa #>   Asplenium obliquum var. chondrophyllum (Bertero apud Colla) C. Christense & C. Skottsberg"},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"from-data-frame-to-taxlist","dir":"","previous_headings":"","what":"From data frame to taxlist","title":"Handling Taxonomic Lists","text":"convenient way create object data frame including , taxon concepts accepted names taxonomic ranks parent-child relationships. case last example, required data frame looks like one: kind tables can written spreadsheet application imported R session. two first columns correspond IDs taxon concept respective accepted name. can custom IDs restricted integers taxlist. use function df2taxlist(), two first columns mandatory. Also note column Parent pointing concept IDs respective parent taxon. get object, just use df2taxlist() indicating sequence taxonomic ranks argument levels.","code":"Fern_df <- data.frame(   TaxonConceptID = 1:4,   TaxonUsageID = 1:4,   TaxonName = c(     \"Asplenium\", \"Asplenium obliquum\",     \"Asplenium obliquum var. sphenoides\",     \"Asplenium obliquum var. chondrophyllum\"   ),   AuthorName = c(     \"L.\", \"Forster\", \"(Kunze) Espinosa\",     \"(Bertero apud Colla) C. Christense & C. Skottsberg\"   ),   Level = c(\"genus\", \"species\", \"variety\", \"variety\"),   Parent = c(NA, 1, 2, 2),   stringsAsFactors = FALSE ) Fern_df #>   TaxonConceptID TaxonUsageID                              TaxonName #> 1              1            1                              Asplenium #> 2              2            2                     Asplenium obliquum #> 3              3            3     Asplenium obliquum var. sphenoides #> 4              4            4 Asplenium obliquum var. chondrophyllum #>                                           AuthorName   Level Parent #> 1                                                 L.   genus     NA #> 2                                            Forster species      1 #> 3                                   (Kunze) Espinosa variety      2 #> 4 (Bertero apud Colla) C. Christense & C. Skottsberg variety      2 Fern2 <- df2taxlist(Fern_df, levels = c(\"variety\", \"species\", \"genus\")) #> No values for 'AcceptedName' in 'x'. all names will be considered as accepted names. Fern2 #> object size: 6.2 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 4  #> number of taxon concepts: 4  #> trait entries: 0  #> number of trait variables: 0  #> taxon views: 0  #>  #> concepts with parents: 3  #> concepts with children: 2  #>  #> hierarchical levels: variety < species < genus  #> number of concepts in level variety: 2 #> number of concepts in level species: 1 #> number of concepts in level genus: 1"},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"similar-packages","dir":"","previous_headings":"","what":"Similar Packages","title":"Handling Taxonomic Lists","text":"package taxlist shares similar objectives package taxa, uses different approaches object oriented programming R, namely taxlist applies S4 taxa uses R6. Additionally, taxa rather developer-oriented, taxlist rather user-oriented package. following cases may prefer use taxlist: need automatic check consistency information regarding taxonomic ranks parent-child relationships (parents higher rank children), well non-duplicated combinations names authors. checks done function validObject(). foresee statistical assessments taxonomy diversity taxon properties (chorology, conservation status, functional traits, etc.). seek produce documents using rmarkdown, instance guide books check-lists. Also article manuscripts taxonomic names referring taxon concept can easily get formatted function print_name(). importing taxonomic lists databases stored Turboveg 2. seek implement package vegtable handling assessing biodiversity records, especially vegetation-plot data. case, taxonomic lists formatted taxlist slot within vegtable object.","code":""},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"rmarkdown-integration","dir":"","previous_headings":"","what":"Rmarkdown Integration","title":"Handling Taxonomic Lists","text":"mentioned , taxlist objects can also used writing rmarkdown documents (see poster). instance can insert objects beginning document hidden chunk: mention taxon, can write -line codes, `r print_name(Easplist, 206)`, insert Cyperus papyrus L. document (note number ID taxon concept Easplist). Fort second mention species, can use `r print_name(Easplist, 206, second_mention=TRUE)`, insert C. papyrus L. text.","code":"```{r  echo=FALSE, message=FALSE, warning=FALSE} library(taxlist) data(Easplist) ```"},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"descriptive-statistics","dir":"","previous_headings":"","what":"Descriptive Statistics","title":"Handling Taxonomic Lists","text":"Information located slot taxonTraits suitable statistical assessments. instance, installed object Easplist column called life_form includes classification macrophytes different life forms. know frequency life forms Easplist, can use function count_taxa(): Furthermore, taxonomic information can also transferred slot using function tax2traits(). way make taxonomic ranks suitable frequency calculations. Note respective parental ranks inserted table taxonTraits, contains attributes taxa. two next command lines, produce subset members family Cyperaceae calculate frequency species per genera. Now, can sort produce nice bar plot.","code":"# how man taxa in 'Easplist' count_taxa(Easplist) #> [1] 3887  # frequency of life forms count_taxa(~life_form, Easplist) #>             life_form taxa_count #> 1    acropleustophyte          8 #> 2         chamaephyte         25 #> 3      climbing_plant         25 #> 4  facultative_annual         20 #> 5     obligate_annual        114 #> 6        phanerophyte         26 #> 7    pleustohelophyte          8 #> 8          reed_plant         14 #> 9       reptant_plant         19 #> 10      tussock_plant         52 Easplist <- tax2traits(Easplist, get_names = TRUE) head(Easplist@taxonTraits) #>   TaxonConceptID          life_form form variety subspecies #> 1              7       phanerophyte <NA>    <NA>       <NA> #> 2              9       phanerophyte <NA>    <NA>       <NA> #> 3             18 facultative_annual <NA>    <NA>       <NA> #> 4             20 facultative_annual <NA>    <NA>       <NA> #> 5             21    obligate_annual <NA>    <NA>       <NA> #> 6             22        chamaephyte <NA>    <NA>       <NA> #>                  species complex        genus        family #> 1        Acacia mearnsii    <NA>       Acacia   Leguminosae #> 2     Acacia polyacantha    <NA>       Acacia   Leguminosae #> 3     Achyranthes aspera    <NA>  Achyranthes Amaranthaceae #> 4     Acmella caulirhiza    <NA>      Acmella    Compositae #> 5      Acmella uliginosa    <NA>      Acmella    Compositae #> 6 Aeschynomene schimperi    <NA> Aeschynomene   Leguminosae Cype <- subset(Easplist, family == \"Cyperaceae\", slot = \"taxonTraits\") Cype_stat <- count_taxa(species ~ genus, Cype) Cype_stat <- Cype_stat[order(Cype_stat$species_count, decreasing = TRUE), ]  par(las = 2, mar = c(10, 5, 1, 1)) with(Cype_stat, barplot(species_count,   names.arg = genus,   ylab = \"Number of Species\" ))"},{"path":"https://docs.ropensci.org/taxlist/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Handling Taxonomic Lists","text":"author thanks Stephan Hennekens, developer Turboveg, patience great support finding common language R Turboveg, well advices formatting taxonomic list EA-Splist. Also thanks Federico Luebert fruitful discussions regarding terminology used project.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/Deprecated-functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — Deprecated-functions","title":"Deprecated functions — Deprecated-functions","text":"functions replaced alternative 'update' ones.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Deprecated-functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — Deprecated-functions","text":"","code":"add_parent()  add_trait()  add_level()  replace_view()  taxlist2taxmap()  taxmap2taxlist()  taxmap2taxlist()  tnrs()"},{"path":"https://docs.ropensci.org/taxlist/reference/Easplist-data.html","id":null,"dir":"Reference","previous_headings":"","what":"List of vascular plants from East Africa — Easplist-data","title":"List of vascular plants from East Africa — Easplist-data","text":"Example incomplete taxonomic list including taxa recorded East Africa.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Easplist-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of vascular plants from East Africa — Easplist-data","text":"","code":"Easplist"},{"path":"https://docs.ropensci.org/taxlist/reference/Easplist-data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of vascular plants from East Africa — Easplist-data","text":"object class taxlist.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Easplist-data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"List of vascular plants from East Africa — Easplist-data","text":"African Plant Database, SWEA-Dataveg.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Easplist-data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of vascular plants from East Africa — Easplist-data","text":"list subset taxonomic list implemented database SWEA-Dataveg. Since list complemented regarding stored vegetation plots, incomplete list.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Easplist-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of vascular plants from East Africa — Easplist-data","text":"","code":"summary(Easplist) #> object size: 761.4 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 5393  #> number of taxon concepts: 3887  #> trait entries: 311  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3698  #> concepts with children: 1343  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 2 #> number of concepts in level variety: 95 #> number of concepts in level subspecies: 71 #> number of concepts in level species: 2521 #> number of concepts in level complex: 1 #> number of concepts in level genus: 1011 #> number of concepts in level family: 186 #>"},{"path":"https://docs.ropensci.org/taxlist/reference/Extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or Replace Parts of taxlist Objects — Extract","title":"Extract or Replace Parts of taxlist Objects — Extract","text":"Quick access slots taxonTraits taxonRelations within taxlist objects.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or Replace Parts of taxlist Objects — Extract","text":"","code":"# S4 method for taxlist [(x, i, j, drop = FALSE)  # S4 method for taxlist $(x, name)"},{"path":"https://docs.ropensci.org/taxlist/reference/Extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or Replace Parts of taxlist Objects — Extract","text":"x Object class taxlist. Integer logical vector used index access taxon concepts, referring rows slot 'taxonRelations'. indices can used produce object subset taxon concepts. recommended use character values index. j Integer, logical character vector used index access variables slot 'taxonTraits'. indices can used reduce number variables mentioned slot. drop logical value passed Extract. name symbol character value method $, corresponding variable either slot 'taxonTraits' slot 'taxonRelations'.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or Replace Parts of taxlist Objects — Extract","text":"method $ retrieves vector, [ retrieves subset input taxlist object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/Extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract or Replace Parts of taxlist Objects — Extract","text":"Miguel Alvarez kamapu78@gmail.com.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/Extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract or Replace Parts of taxlist Objects — Extract","text":"","code":"## Statistics on life forms summary(as.factor(Easplist$life_form)) #>   acropleustophyte        chamaephyte     climbing_plant facultative_annual  #>                  8                 25                 25                 20  #>    obligate_annual       phanerophyte   pleustohelophyte         reed_plant  #>                114                 26                  8                 14  #>      reptant_plant      tussock_plant               NA's  #>                 19                 52               3576   ## First concepts in this list summary(Easplist[1:5, ], \"all\") #> ------------------------------  #> concept ID: 1  #> view ID: 1  #> level: species  #> parent: none  #>  #> # accepted name:  #> 1 Abelmoschus esculentus (L.) Moench  #>  #> # synonyms (1):  #> 52313 Hibiscus esculentus L.  #> ------------------------------  #> concept ID: 2  #> view ID: 1  #> level: species  #> parent: none  #>  #> # accepted name:  #> 2 Abutilon indicum (L.)  #> ------------------------------  #> concept ID: 3  #> view ID: 1  #> level: species  #> parent: none  #>  #> # accepted name:  #> 3 Abutilon mauritianum (Jacq.) Medik.  #>  #> # synonyms (1):  #> 50361 Pavonia patens (Andrews) Chiov.  #> ------------------------------  #> concept ID: 4  #> view ID: 1  #> level: species  #> parent: none  #>  #> # accepted name:  #> 4 Acacia drepanolobium Harms ex Y. Sjöstedt  #> ------------------------------  #> concept ID: 5  #> view ID: 1  #> level: species  #> parent: none  #>  #> # accepted name:  #> 5 Acacia elatior Brenan  #> ------------------------------"},{"path":"https://docs.ropensci.org/taxlist/reference/accepted_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage accepted names, synonyms and basionyms — accepted_name","title":"Manage accepted names, synonyms and basionyms — accepted_name","text":"Taxon usage names taxon concept can divided three categories: accepted names, basionyms synonyms. single taxon concept may least accepted name, basionym synonyms optional. function accepted_name() retrieves accepted names indicated taxon concepts whole taxlist object. using show_traits=TRUE, respective taxon traits displayed well, providing overview taxa included object. replacement method function set respective usage name IDs accepted names respective taxon concept, provided names already set synonyms respective concepts. function synonyms() working similar way accepted_name(), function include taxon traits output. Alternatives inserting new synonyms taxon concept either moving synonyms taxa using change_concept<- inserting new names object using add_synonym(). function basionym() retrieving setting basionyms respective taxon concepts similarly accepted_name, function retrieve information taxon traits, either. fucntion change_concept<- replace taxon usage name (argument 'UsageID') different taxonomic concept (argument 'value').","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/accepted_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage accepted names, synonyms and basionyms — accepted_name","text":"","code":"accepted_name(taxlist, ...)  # S3 method for taxlist accepted_name(taxlist, ConceptID, show_traits = FALSE, ...)  accepted_name(taxlist, ...) <- value  # S3 method for taxlist accepted_name(taxlist, ConceptID, ...) <- value  synonyms(taxlist, ...)  # S3 method for taxlist synonyms(taxlist, ConceptID, ...)  basionym(taxlist, ...)  # S3 method for taxlist basionym(taxlist, ConceptID, ...)  basionym(taxlist, ...) <- value  # S3 method for taxlist basionym(taxlist, ConceptID, ...) <- value  change_concept(taxlist, ...) <- value  # S3 method for taxlist change_concept(taxlist, UsageID, ...) <- value"},{"path":"https://docs.ropensci.org/taxlist/reference/accepted_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage accepted names, synonyms and basionyms — accepted_name","text":"taxlist object class taxlist. ... arguments passed among methods. ConceptID Integer containing concept IDs request set names one category. show_traits Logical value, whether traits included output accepted_name . value Integer containing usage IDs set respective category respective taxon concept. UsageID Numeric vector taxon usage IDs changed different taxonomic concept.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/accepted_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage accepted names, synonyms and basionyms — accepted_name","text":"methods return information data frames, replacement methods taxlist objects.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/accepted_name.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Manage accepted names, synonyms and basionyms — accepted_name","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/accepted_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage accepted names, synonyms and basionyms — accepted_name","text":"","code":"## Set a different accepted name for Cyclosorus interruptus summary(Easplist, \"Cyclosorus interruptus\") #> ------------------------------  #> concept ID: 50074  #> view ID: 1  #> level: species  #> parent: 55055 Cyclosorus Link  #>  #> # accepted name:  #> 50074 Cyclosorus interruptus (Willd.) H. Itô  #>  #> # synonyms (13):  #> 52002 Dryopteris gongylodes (Schkuhr) Kuntze  #> 52008 Thelypteris interrupta (Willd.) K. Iwats.  #> 52009 Cyclosorus striatus Ching  #> 53097 Pteris interrupta Willd.  #> 53098 Aspidium continuum Desv.  #> 53099 Aspidium ecklonii Kunze  #> 53100 Aspidium gongylodes Schkuhr  #> 53101 Aspidium obtusatum Sw.  #> 53102 Aspidium pteroides (Retz.) Sw.  #> 53103 Aspidium serra (Sw.) Sw.  #> 53104 Aspidium serratum Sw.  #> 53105 Aspidium unitum (L.) Sw.  #> 53106 Nephrodium propinquum R. Br.  #> ------------------------------ accepted_name(Easplist, 50074) <- 53097 summary(Easplist, 50074) #> ------------------------------  #> concept ID: 50074  #> view ID: 1  #> level: species  #> parent: 55055 Cyclosorus Link  #>  #> # accepted name:  #> 53097 Pteris interrupta Willd.  #>  #> # synonyms (13):  #> 50074 Cyclosorus interruptus (Willd.) H. Itô  #> 52002 Dryopteris gongylodes (Schkuhr) Kuntze  #> 52008 Thelypteris interrupta (Willd.) K. Iwats.  #> 52009 Cyclosorus striatus Ching  #> 53098 Aspidium continuum Desv.  #> 53099 Aspidium ecklonii Kunze  #> 53100 Aspidium gongylodes Schkuhr  #> 53101 Aspidium obtusatum Sw.  #> 53102 Aspidium pteroides (Retz.) Sw.  #> 53103 Aspidium serra (Sw.) Sw.  #> 53104 Aspidium serratum Sw.  #> 53105 Aspidium unitum (L.) Sw.  #> 53106 Nephrodium propinquum R. Br.  #> ------------------------------  ## Inserting a new name first summary(Easplist, \"Basella alba\") #> ------------------------------  #> concept ID: 68  #> view ID: 1  #> level: species  #> parent: 54790 Basella L.  #>  #> # accepted name:  #> 68 Basella alba L.  #> ------------------------------ Easplist <- add_synonym(taxlist = Easplist, ConceptID = 68,     TaxonName = \"Basella cordifolia\", AuthorName = \"Lam.\") summary(Easplist, 68) #> ------------------------------  #> concept ID: 68  #> view ID: 1  #> level: species  #> parent: 54790 Basella L.  #>  #> # accepted name:  #> 68 Basella alba L.  #>  #> # synonyms (1):  #> 56139 Basella cordifolia Lam.  #> ------------------------------ accepted_name(Easplist, 68) <- 56139 summary(Easplist, 68) #> ------------------------------  #> concept ID: 68  #> view ID: 1  #> level: species  #> parent: 54790 Basella L.  #>  #> # accepted name:  #> 56139 Basella cordifolia Lam.  #>  #> # synonyms (1):  #> 68 Basella alba L.  #> ------------------------------  ## Display synonyms head(synonyms(taxlist = Easplist)) #>    TaxonUsageID TaxonConceptID               TaxonName              AuthorName #> 2         52313              1     Hibiscus esculentus                      L. #> 5         50361              3          Pavonia patens        (Andrews) Chiov. #> 23        50001             20   Spilanthes mauritiana (A. Rich. ex Pers.) DC. #> 25        50002             21    Spilanthes uliginosa                     Sw. #> 29        50003             24 Podocarpus usambarensis                   Pilg. #> 44        50004             38     Amaranthus cruentus                      L. #>                         AcceptedName AuthorAcceptedName #> 2             Abelmoschus esculentus        (L.) Moench #> 5               Abutilon mauritianum     (Jacq.) Medik. #> 23                Acmella caulirhiza             Delile #> 25                 Acmella uliginosa        (Sw.) Cass. #> 29           Afrocarpus usambarensis (Pilg.) C. N. Page #> 44 Amaranthus hybridus ssp. cruentus        (L.) Thell.  ## Synonyms for an specific concept synonyms(taxlist = Easplist, ConceptID = 20) #>      TaxonUsageID TaxonConceptID                                   TaxonName #> 23          50001             20                       Spilanthes mauritiana #> 2889        52448             20                       Spilanthes caulirhiza #> 2890        52449             20                          Acmella mauritiana #> 2891        52450             20                         Spilanthes africana #> 2892        52451             20                       Spilanthes abyssinica #> 2893        52452             20                          Eclipta filicaulis #> 2894        52453             20                       Spilanthes filicaulis #> 2895        52454             20             Spilanthes acmella var. acmella #> 2896        52455             20                           Verbesina acmella #> 2897        52456             20                          Spilanthes acmella #> 2898        52457             20                         Blainvillea acmella #> 2899        52458             20                           Eclipta latifolia #> 2900        52459             20                       Blainvillea latifolia #> 2901        52460             20                      Blainvillea rhomboidea #> 2902        52461             20                   Blainvillea dalla-vedovae #> 2903        52462             20                         Verbesina dichotoma #> 2904        52463             20                       Blainvillea dichotoma #> 2905        52464             20 Spilanthes caulirhiza var. madagascariensis #> 2906        52465             20   Spilanthes mauritiana f. madagascariensis #>                            AuthorName       AcceptedName AuthorAcceptedName #> 23            (A. Rich. ex Pers.) DC. Acmella caulirhiza             Delile #> 2889                     (Delile) DC. Acmella caulirhiza             Delile #> 2890                A. Rich. ex Pers. Acmella caulirhiza             Delile #> 2891                              DC. Acmella caulirhiza             Delile #> 2892            Sch. Bip. ex A. Rich. Acmella caulirhiza             Delile #> 2893               Schumach. & Thonn. Acmella caulirhiza             Delile #> 2894 (Schumach. & Thonn.) C. D. Adams Acmella caulirhiza             Delile #> 2895                      (L.) Murray Acmella caulirhiza             Delile #> 2896                               L. Acmella caulirhiza             Delile #> 2897                      (L.) Murray Acmella caulirhiza             Delile #> 2898                   (L.) Philipson Acmella caulirhiza             Delile #> 2899                            L. f. Acmella caulirhiza             Delile #> 2900                      (L. f.) DC. Acmella caulirhiza             Delile #> 2901                            Cass. Acmella caulirhiza             Delile #> 2902                      A. Terracc. Acmella caulirhiza             Delile #> 2903                           Murray Acmella caulirhiza             Delile #> 2904                 (Murray) Stewart Acmella caulirhiza             Delile #> 2905                              DC. Acmella caulirhiza             Delile #> 2906                (DC.) A. H. Moore Acmella caulirhiza             Delile  ## Basionym for Cyclosrus interruptus summary(Easplist, 50074) #> ------------------------------  #> concept ID: 50074  #> view ID: 1  #> level: species  #> parent: 55055 Cyclosorus Link  #>  #> # accepted name:  #> 53097 Pteris interrupta Willd.  #>  #> # synonyms (13):  #> 50074 Cyclosorus interruptus (Willd.) H. Itô  #> 52002 Dryopteris gongylodes (Schkuhr) Kuntze  #> 52008 Thelypteris interrupta (Willd.) K. Iwats.  #> 52009 Cyclosorus striatus Ching  #> 53098 Aspidium continuum Desv.  #> 53099 Aspidium ecklonii Kunze  #> 53100 Aspidium gongylodes Schkuhr  #> 53101 Aspidium obtusatum Sw.  #> 53102 Aspidium pteroides (Retz.) Sw.  #> 53103 Aspidium serra (Sw.) Sw.  #> 53104 Aspidium serratum Sw.  #> 53105 Aspidium unitum (L.) Sw.  #> 53106 Nephrodium propinquum R. Br.  #> ------------------------------ basionym(Easplist, 50074) <- 53097  summary(Easplist, 50074) #> ------------------------------  #> concept ID: 50074  #> view ID: 1  #> level: species  #> parent: 55055 Cyclosorus Link  #>  #> # accepted name:  #> 53097 Pteris interrupta Willd.  #>  #> # basionym:  #> numeric(0) character(0) character(0)  #>  #> # synonyms (13):  #> 50074 Cyclosorus interruptus (Willd.) H. Itô  #> 52002 Dryopteris gongylodes (Schkuhr) Kuntze  #> 52008 Thelypteris interrupta (Willd.) K. Iwats.  #> 52009 Cyclosorus striatus Ching  #> 53098 Aspidium continuum Desv.  #> 53099 Aspidium ecklonii Kunze  #> 53100 Aspidium gongylodes Schkuhr  #> 53101 Aspidium obtusatum Sw.  #> 53102 Aspidium pteroides (Retz.) Sw.  #> 53103 Aspidium serra (Sw.) Sw.  #> 53104 Aspidium serratum Sw.  #> 53105 Aspidium unitum (L.) Sw.  #> 53106 Nephrodium propinquum R. Br.  #> ------------------------------ basionym(Easplist, 50074) #>     TaxonConceptID Basionym      BasionymName BasionymAuthor #> 601          50074    53097 Pteris interrupta         Willd.  ## Move the name Typha aethiopica to concept 573 (T. latifolia) summary(Easplist, c(50105, 573)) #> ------------------------------  #> concept ID: 50105  #> view ID: 1  #> level: species  #> parent: 55040 Typha L.  #>  #> # accepted name:  #> 50105 Typha domingensis Pers.  #>  #> # synonyms (9):  #> 51999 Typha australis Schumach.  #> 53124 Typha angustifolia ssp. australis (Schumach.) Graebn.  #> 53125 Typha aequalis Schnizl.  #> 53126 Typha angustata Bory & Chaub.  #> 53127 Typha angustifolia ssp. angustata (Bory & Chaub.) Briq.  #> 53128 Typha angustata var. abyssinica Graebn.  #> 53129 Typha angustata var. aethiopica Rohrb.  #> 53130 Typha aethiopica (Rohrb.) Kronfeldt  #> 53131 Typha schimperi Rohrb.  #> ------------------------------  #> concept ID: 573  #> view ID: 1  #> level: species  #> parent: 55040 Typha L.  #>  #> # accepted name:  #> 573 Typha latifolia L.  #> ------------------------------ change_concept(Easplist, 53130) <- 573 summary(Easplist, c(50105, 573)) #> ------------------------------  #> concept ID: 50105  #> view ID: 1  #> level: species  #> parent: 55040 Typha L.  #>  #> # accepted name:  #> 50105 Typha domingensis Pers.  #>  #> # synonyms (8):  #> 51999 Typha australis Schumach.  #> 53124 Typha angustifolia ssp. australis (Schumach.) Graebn.  #> 53125 Typha aequalis Schnizl.  #> 53126 Typha angustata Bory & Chaub.  #> 53127 Typha angustifolia ssp. angustata (Bory & Chaub.) Briq.  #> 53128 Typha angustata var. abyssinica Graebn.  #> 53129 Typha angustata var. aethiopica Rohrb.  #> 53131 Typha schimperi Rohrb.  #> ------------------------------  #> concept ID: 573  #> view ID: 1  #> level: species  #> parent: 55040 Typha L.  #>  #> # accepted name:  #> 573 Typha latifolia L.  #>  #> # synonyms (1):  #> 53130 Typha aethiopica (Rohrb.) Kronfeldt  #> ------------------------------"},{"path":"https://docs.ropensci.org/taxlist/reference/add_concept.html","id":null,"dir":"Reference","previous_headings":"","what":"Add new taxonomic concepts into taxlist objects — add_concept","title":"Add new taxonomic concepts into taxlist objects — add_concept","text":"Alternative methods add new concepts existing taxlist objects.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/add_concept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add new taxonomic concepts into taxlist objects — add_concept","text":"","code":"add_concept(taxlist, TaxonName, ...)  # S4 method for taxlist,data.frame add_concept(taxlist, TaxonName, ...)  # S4 method for taxlist,character add_concept(taxlist, TaxonName, ...)  # S4 method for taxlist,taxlist add_concept(taxlist, TaxonName, insert_view = FALSE, ...)  update_concept(taxlist, ConceptID, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/add_concept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add new taxonomic concepts into taxlist objects — add_concept","text":"taxlist taxlist object. TaxonName Character vector accepted name new taxon concepts. ... arguments passed among methods. insert_view numeric (integer) vector, indicating views inserted taxlist value TRUE (see details). ConceptID Concept IDs updated.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/add_nacolumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Filling missed columns with NAs — add_nacolumn","title":"Filling missed columns with NAs — add_nacolumn","text":"columns y missed x, later gets columns filled NA values.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/add_nacolumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filling missed columns with NAs — add_nacolumn","text":"","code":"add_nacolumn(x, y)"},{"path":"https://docs.ropensci.org/taxlist/reference/add_nacolumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filling missed columns with NAs — add_nacolumn","text":"x (data.frame) data frame compared. y (data.frame) data frame used reference.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/add_nacolumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filling missed columns with NAs — add_nacolumn","text":"data.frame.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/add_suffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a suffix when strings are identical — add_suffix","title":"Add a suffix when strings are identical — add_suffix","text":"integer added suffix x identical value y. value suffix already y, function search highest suffix avoid duplicated values.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/add_suffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a suffix when strings are identical — add_suffix","text":"","code":"add_suffix(x, y, sep = \"_\")"},{"path":"https://docs.ropensci.org/taxlist/reference/add_suffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a suffix when strings are identical — add_suffix","text":"x (character length 1) name compared. y (character) Existing names, without suffixes. sep (character length 1) Symbol placed original name suffix.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/add_suffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a suffix when strings are identical — add_suffix","text":"character value, either x x suffix already y.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/backup_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Make and load backups of R objects — backup_object","title":"Make and load backups of R objects — backup_object","text":"work data becomes risky, best practice produce backup files. function backup_object wrapper save(), adding time stamp suffix name resulting file (R image file extension *.rda). function load_last adapted style, loading newest version session.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/backup_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make and load backups of R objects — backup_object","text":"","code":"backup_object(   ...,   objects = character(),   file,   stamp = TRUE,   sep = \"_\",   date_format = \"%Y-%m-%d\",   time_format = \"%H:%M:%S\",   overwrite = FALSE )  sort_backups(   name,   path = \".\",   date_format = \"%Y-%m-%d\",   fext = \".rda\",   sep = \"_\" )  load_last(file, path, ..., choice)"},{"path":"https://docs.ropensci.org/taxlist/reference/backup_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make and load backups of R objects — backup_object","text":"... Names objects saved (either symbols character strings) backup_object(). load_last(), arguments passed sort_backups(). objects character vector indicating names objects included backup file. file character value indicating name backup file, without extension. stamp logical value indicating whether time stamped backup name . sep character value used separate backup's name stamp suffix. date_format character value indicating format used file stamp. See strptime(). time_format character value indicating format used time (including date), used invisible report backup_object(). See strptime(). overwrite logical value indicating whether existing files must overwritten . name character value indicating root backup's name. path character value indicating path folder containing backup files. fext character value indicating file extension (including dot symbol). choice integer value indicating backup file used recovery. value refers row output sort_backups(). provided, load_last() select newest backup.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/backup_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make and load backups of R objects — backup_object","text":"function backup_object() writes R-image extension *.rda invisible vector name backup, absolute path time stamp. function sort_backups() returns data frame including sorted names backup files oldest newest.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/backup_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make and load backups of R objects — backup_object","text":"functions argument file may include either path relative working directory absolute path file, excluding stamps extension. overwrite=FALSE (default), numeric suffix added backup's name, another backup produced day. overwrite=TRUE suffix included file existing files overwritten. function load_last() load newest version among backups stored folder, provided backup name includes time stamp.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/backup_object.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make and load backups of R objects — backup_object","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/backup_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make and load backups of R objects — backup_object","text":"","code":"## A subset with Pseudognaphalium and relatives Pseudognaphalium <- subset(x = Easplist, subset = grepl(\"Pseudognaphalium\",         TaxonName), slot = \"names\", keep_parents = TRUE)  ## Create a backup with date stamp in tempdir backup_object(Pseudognaphalium, file = file.path(tempdir(), \"Pseudognaphalium\")) #> Error in save(..., list = objects, file = file.path(path, paste0(file2,     \".rda\"))): object ‘Pseudognaphalium’ not found  ## Retrieve paths of backup info_back <- backup_object(Pseudognaphalium, file = file.path(tempdir(),         \"Pseudognaphalium\")) #> Error in save(..., list = objects, file = file.path(path, paste0(file2,     \".rda\"))): object ‘Pseudognaphalium’ not found info_back #> Error in eval(expr, envir, enclos): object 'info_back' not found  ## Display all backups sort_backups(\"Pseudognaphalium\", tempdir()) #> Error in sort_backups(\"Pseudognaphalium\", tempdir()): The requested backup is missing.  ## Delete object rm(list = \"Pseudognaphalium\")  ## To load the last backup into a session load_last(\"Pseudognaphalium\", path = tempdir()) #> Error in sort_backups(name = file, path = path, ...): The requested backup is missing.  ## Load pre-installed backup load_last(file.path(path.package(\"taxlist\"), \"extdata\", \"Podocarpus\")) #> Loading file 'Podocarpus_2020-01-10.rda' to session."},{"path":"https://docs.ropensci.org/taxlist/reference/clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete orphaned records — clean","title":"Delete orphaned records — clean","text":"Manipulation slots may generate orphaned entries taxlist objects. function clean deletes entries restores consistency objects.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete orphaned records — clean","text":"","code":"clean(object, ...)  # S4 method for taxlist clean(object, times = 2, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete orphaned records — clean","text":"object taxlist object. ... arguments passed methods. times integer indicating many times cleaning repeated.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete orphaned records — clean","text":"clean taxlist object.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete orphaned records — clean","text":"Cleaning objects follow deletion orphaned names, orphaned taxon trait entries, orphaned parent entries.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delete orphaned records — clean","text":"Miguel Alvarez.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete orphaned records — clean","text":"","code":"## Direct manipulation of slot taxonRelations generates an invalid object Easplist@taxonRelations <- Easplist@taxonRelations[1:5, ]  ## Now apply cleaning Easplist <- clean(Easplist) summary(Easplist) #> object size: 7.8 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 7  #> number of taxon concepts: 5  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 5 #> number of concepts in level complex: 0 #> number of concepts in level genus: 0 #> number of concepts in level family: 0 #>"},{"path":"https://docs.ropensci.org/taxlist/reference/clean_once_taxlist.html","id":null,"dir":"Reference","previous_headings":"","what":"One run clean function — clean_once_taxlist","title":"One run clean function — clean_once_taxlist","text":"One run clean function","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean_once_taxlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One run clean function — clean_once_taxlist","text":"","code":"clean_once_taxlist(object)"},{"path":"https://docs.ropensci.org/taxlist/reference/clean_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleaning character strings. — clean_strings","title":"Cleaning character strings. — clean_strings","text":"Multiple, leading trailing white spaces well wrong encodings may cause serious problems information dealing taxonomic names. function clean_strings get rid .","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleaning character strings. — clean_strings","text":"","code":"clean_strings(x, ...)  # S4 method for character clean_strings(x, from = \"utf8\", to = \"utf8\", ...)  # S4 method for factor clean_strings(x, from = \"utf8\", to = \"utf8\", ...)  # S4 method for data.frame clean_strings(x, from = \"utf8\", to = \"utf8\", ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/clean_strings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleaning character strings. — clean_strings","text":"x Object cleaned. ... arguments passed among methods (yet use). , Arguments passed iconv().","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean_strings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleaning character strings. — clean_strings","text":"input x.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean_strings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cleaning character strings. — clean_strings","text":"function automatically deletes leading, trailing multiple white spaces, either strings (method character), levels (method factor single columns (method data.frame).","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean_strings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cleaning character strings. — clean_strings","text":"Miguel Alvarez.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/clean_strings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleaning character strings. — clean_strings","text":"","code":"## Leading, trailing and multiple spaces clean_strings(\" Cyperus    papyrus L.     \") #> [1] \"Cyperus papyrus L.\""},{"path":"https://docs.ropensci.org/taxlist/reference/coerce-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce taxlist objects to lists. — as","title":"Coerce taxlist objects to lists. — as","text":"Coercion S4 objects lists can applied explore content, avoiding errors caused validation.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/coerce-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce taxlist objects to lists. — as","text":"","code":"S4_to_list(x)"},{"path":"https://docs.ropensci.org/taxlist/reference/coerce-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce taxlist objects to lists. — as","text":"x object class taxlist S4 class.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/coerce-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce taxlist objects to lists. — as","text":"object class list.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/coerce-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce taxlist objects to lists. — as","text":"Coerce taxlist objects lists.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/coerce-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce taxlist objects to lists. — as","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/coerce-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce taxlist objects to lists. — as","text":"","code":"## Coerce taxlist to list tax_list <- as(Easplist, \"list\")  ## Coerce data frame to taxlist Cyperus <- read.csv(file = file.path(path.package(\"taxlist\"), \"cyperus\",         \"names.csv\")) Cyperus$AcceptedName <- !Cyperus$SYNONYM head(Cyperus) #>   TaxonUsageID LETTERCODE           SHORTNAME           TaxonName NATIVENAME #> 1          192    CYPEAUR Cyperus auriculatus Cyperus auriculatus         NA #> 2          193    CYPECOR  Cyperus corymbosus  Cyperus corymbosus         NA #> 3          194    CYPEDIF   Cyperus difformis   Cyperus difformis         NA #> 4          195    CYPEDIG   Cyperus digitatus   Cyperus digitatus         NA #> 5          196    CYPEDIS     Cyperus distans     Cyperus distans         NA #> 6          197    CYPEDIV       Cyperus dives       Cyperus dives         NA #>                     AuthorName SYNONYM TaxonConceptID AcceptedName #> 1 (Nees & Meyen ex Kunth) Kük.   FALSE            192         TRUE #> 2                       Rottb.   FALSE            193         TRUE #> 3                           L.   FALSE            194         TRUE #> 4                        Roxb.   FALSE            195         TRUE #> 5                        L. f.   FALSE            196         TRUE #> 6                       Delile   FALSE            197         TRUE  as(Cyperus, \"taxlist\") #> object size: 32.1 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 95  #> number of taxon concepts: 42  #> trait entries: 0  #> number of trait variables: 0  #> taxon views: 0  #>"},{"path":"https://docs.ropensci.org/taxlist/reference/count_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Count taxa within a taxlist object. — count_taxa","title":"Count taxa within a taxlist object. — count_taxa","text":"Counting number taxa within taxlist objects character vectors containing taxon names.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/count_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count taxa within a taxlist object. — count_taxa","text":"","code":"count_taxa(object, data, ...)  # S4 method for character,missing count_taxa(object, na.rm = TRUE, ...)  # S4 method for factor,missing count_taxa(object, na.rm = TRUE, ...)  # S4 method for taxlist,missing count_taxa(object, level, ...)  # S4 method for formula,taxlist count_taxa(object, data, include_na = FALSE, suffix = \"_count\", ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/count_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count taxa within a taxlist object. — count_taxa","text":"object object containing taxonomic list formula. data object class taxlist formula method. ... arguments passed among methods. na.rm Logical value, whether NAs removed input vector . level Character value indicating taxonomic rank counted taxa. include_na Logical value indicating whether NA values taxon trait considered counting taxa just ignored (used formula method). suffix Character value used suffix counted rank output data frame (used formula method).","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/count_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count taxa within a taxlist object. — count_taxa","text":"integer number taxa.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/count_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count taxa within a taxlist object. — count_taxa","text":"function written convenience order reduce code counting taxa within taxlist objects just wrapper length().","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/count_taxa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count taxa within a taxlist object. — count_taxa","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/count_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count taxa within a taxlist object. — count_taxa","text":"","code":"## factor method count_taxa(iris$Species) #> [1] 3  ## taxlist method count_taxa(Easplist) #> [1] 3887  ## count only species count_taxa(Easplist, level = \"species\") #> [1] 2521  ## using a formula count_taxa(~life_form, Easplist, include_na = TRUE) #>             life_form taxa_count #> 1                 NAs       3576 #> 2    acropleustophyte          8 #> 3         chamaephyte         25 #> 4      climbing_plant         25 #> 5  facultative_annual         20 #> 6     obligate_annual        114 #> 7        phanerophyte         26 #> 8    pleustohelophyte          8 #> 9          reed_plant         14 #> 10      reptant_plant         19 #> 11      tussock_plant         52"},{"path":"https://docs.ropensci.org/taxlist/reference/df2taxlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data frames and strings into taxlist objects — df2taxlist","title":"Convert data frames and strings into taxlist objects — df2taxlist","text":"Function converting template data frame taxlist object. Also character vectors including taxonomic names converted without information taxonomic ranks parental taxa.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/df2taxlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data frames and strings into taxlist objects — df2taxlist","text":"","code":"df2taxlist(x, ...)  # S3 method for data.frame df2taxlist(x, taxonTraits, taxonViews, levels, clean_strings = TRUE, ...)  # S3 method for character df2taxlist(x, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/df2taxlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data frames and strings into taxlist objects — df2taxlist","text":"x data frame character vector taxonomic names. x data frame, columns TaxonUsageID (integer IDs name), TaxonConceptID (integer IDs respective taxon concepts), TaxonName (character) mandatory. optional columns AuthorName (character names' authorities), AcceptedName (logical indicating whether name accepted name synonym set TRUE default), Level (factor sorting taxonomic ranks bottom-direction), Parent (integer, taxon concept ID parental taxon), ViewID (integer pointing ID taxonomic view, usually bibliographic reference, used 'taxonViews' provided. column included prototype taxlist considered names' attributes inserted slot taxonNames. ... arguments passed among methods. 'character-method', arguments passed 'data.frame-method'. taxonTraits data frame attributes taxonomic concepts (optional). provided, column TaxonConceptID mandatorial. taxonViews data frame lib_df references taxonomic views (optional). provided, column ViewID mandatorial match homonymous column 'x'. levels character vector setting levels taxonomic ranks bottom top. argument optional missing, column Level preserved (factor) coerced factor, except case column Level provided. clean_strings Logical value, whether function clean_strings() applied 'x' .","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/df2taxlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data frames and strings into taxlist objects — df2taxlist","text":"taxlist object.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/df2taxlist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert data frames and strings into taxlist objects — df2taxlist","text":"Miguel Alvarez kamapu78@gmail.com.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/df2taxlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data frames and strings into taxlist objects — df2taxlist","text":"","code":"Cyperus <- read.csv(file = file.path(path.package(\"taxlist\"), \"cyperus\",   \"names.csv\")) head(Cyperus) #>   TaxonUsageID LETTERCODE           SHORTNAME           TaxonName NATIVENAME #> 1          192    CYPEAUR Cyperus auriculatus Cyperus auriculatus         NA #> 2          193    CYPECOR  Cyperus corymbosus  Cyperus corymbosus         NA #> 3          194    CYPEDIF   Cyperus difformis   Cyperus difformis         NA #> 4          195    CYPEDIG   Cyperus digitatus   Cyperus digitatus         NA #> 5          196    CYPEDIS     Cyperus distans     Cyperus distans         NA #> 6          197    CYPEDIV       Cyperus dives       Cyperus dives         NA #>                     AuthorName SYNONYM TaxonConceptID #> 1 (Nees & Meyen ex Kunth) Kük.   FALSE            192 #> 2                       Rottb.   FALSE            193 #> 3                           L.   FALSE            194 #> 4                        Roxb.   FALSE            195 #> 5                        L. f.   FALSE            196 #> 6                       Delile   FALSE            197  ## Convert to 'taxlist' object Cyperus$AcceptedName <- !Cyperus$SYNONYM df2taxlist(Cyperus) #> object size: 32.1 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 95  #> number of taxon concepts: 42  #> trait entries: 0  #> number of trait variables: 0  #> taxon views: 0  #>   ## Create a 'taxlist' object from character vectors Plants <- df2taxlist(c(\"Triticum aestivum\", \"Zea mays\"), AuthorName = \"L.\") #> Missing column 'TaxonConceptID' in 'x'. All names will be considered as accepted names. summary(Plants, \"all\") #> ------------------------------  #> concept ID: 1  #> view ID: none  #> level: none  #> parent: none  #>  #> # accepted name:  #> 1 Triticum aestivum NA  #> ------------------------------  #> concept ID: 2  #> view ID: none  #> level: none  #> parent: none  #>  #> # accepted name:  #> 2 Zea mays NA  #> ------------------------------"},{"path":"https://docs.ropensci.org/taxlist/reference/dissect_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Dissect Scientific Names into their Elements — dissect_name","title":"Dissect Scientific Names into their Elements — dissect_name","text":"Depending degree resolution specific roles nomenclature, strings containing taxon usage names (scientific names) constructed different parts. string names can consequently split elements, meanwhile number elements may suggest taxonomic ranks. function wrapper strsplit(), name element can re-pasted indicated argument repaste.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/dissect_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dissect Scientific Names into their Elements — dissect_name","text":"","code":"dissect_name(x, split = \" \", fixed = TRUE, repaste, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/dissect_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dissect Scientific Names into their Elements — dissect_name","text":"x character vector containing taxon names. split, fixed, ... Arguments passed strsplit(). repaste integer vector indicating elements name selected output.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/dissect_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dissect Scientific Names into their Elements — dissect_name","text":"character matrix many rows names input vector. repaste indicated, output character vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/dissect_name.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dissect Scientific Names into their Elements — dissect_name","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/dissect_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dissect Scientific Names into their Elements — dissect_name","text":"","code":"# A list of variety names sp_list <- subset(x = Easplist, subset = Level == \"variety\", slot = \"relations\") sp_list <- accepted_name(sp_list)[c(1:10), \"TaxonName\"]  # split name dissect_name(sp_list) #>       [,1]          [,2]            [,3]   [,4]                #>  [1,] \"Euphorbia\"   \"inaequilatera\" \"var.\" \"dentata\"           #>  [2,] \"Oldenlandia\" \"corymbosa\"     \"var.\" \"caespitosa\"        #>  [3,] \"Pilea\"       \"usambarensis\"  \"var.\" \"veronicifolia\"     #>  [4,] \"Trifolium\"   \"semipilosum\"   \"var.\" \"glabrescens\"       #>  [5,] \"Pentas\"      \"lanceolata\"    \"var.\" \"nemorosa\"          #>  [6,] \"Stachys\"     \"aculeolata\"    \"var.\" \"aculeolata\"        #>  [7,] \"Pimpinella\"  \"oreophila\"     \"var.\" \"kilimandscharica\"  #>  [8,] \"Cyperus\"     \"denudatus\"     \"var.\" \"lucenti-nigricans\" #>  [9,] \"Achyranthes\" \"aspera\"        \"var.\" \"sicula\"            #> [10,] \"Digitaria\"   \"diagonalis\"    \"var.\" \"uniglumis\"          # re-paste the two first words (species name) dissect_name(sp_list, repaste = c(1:2)) #>  [1] \"Euphorbia inaequilatera\" \"Oldenlandia corymbosa\"   #>  [3] \"Pilea usambarensis\"      \"Trifolium semipilosum\"   #>  [5] \"Pentas lanceolata\"       \"Stachys aculeolata\"      #>  [7] \"Pimpinella oreophila\"    \"Cyperus denudatus\"       #>  [9] \"Achyranthes aspera\"      \"Digitaria diagonalis\""},{"path":"https://docs.ropensci.org/taxlist/reference/get_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve children or parents of taxon concepts — get_children","title":"Retrieve children or parents of taxon concepts — get_children","text":"Retrieve children parents queried taxon concept.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/get_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve children or parents of taxon concepts — get_children","text":"","code":"get_children(taxlist, ...)  # S3 method for taxlist get_children(taxlist, ConceptID, ...)  get_parents(taxlist, ...)  # S3 method for taxlist get_parents(taxlist, ConceptID, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/get_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve children or parents of taxon concepts — get_children","text":"taxlist taxlist object. ... arguments passed among methods. ConceptID Concept IDs selecting parents children subset taxlist.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/get_children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve children or parents of taxon concepts — get_children","text":"taxlist object subset including requested concepts children parents.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/get_children.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve children or parents of taxon concepts — get_children","text":"function produces subsets taxlist objects including children parents queried taxon concepts. Multiple concepts can queried function. argument ConceptID can vector concept IDs subset input taxlist object.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/get_children.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve children or parents of taxon concepts — get_children","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/get_children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve children or parents of taxon concepts — get_children","text":"","code":"## Subset with family Ebenaceae and children Ebenaceae <- subset(x = Easplist, subset = TaxonName == \"Ebenaceae\") Ebenaceae #> object size: 6.7 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 1  #> number of taxon concepts: 1  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 0 #> number of concepts in level complex: 0 #> number of concepts in level genus: 0 #> number of concepts in level family: 1 #>   Ebenaceae <- get_children(Easplist, Ebenaceae) Ebenaceae #> object size: 8.5 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 10  #> number of taxon concepts: 9  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 8  #> concepts with children: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 6 #> number of concepts in level complex: 0 #> number of concepts in level genus: 2 #> number of concepts in level family: 1 #>   ## Get parents of Diospyros tricolor Diostri <- subset(x = Easplist, subset = TaxonConceptID == 52403,     slot = \"relations\") Diostri #> object size: 6.7 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 1  #> number of taxon concepts: 1  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 1 #> number of concepts in level complex: 0 #> number of concepts in level genus: 0 #> number of concepts in level family: 0 #>   Diostri <- get_parents(Easplist, Diostri) Diostri #> object size: 7.1 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 3  #> number of taxon concepts: 3  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 2  #> concepts with children: 2  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 1 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 1 #>"},{"path":"https://docs.ropensci.org/taxlist/reference/id_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Identifiers — id_generator","title":"Generate Identifiers — id_generator","text":"Creating identifiers new elements database. function id_solver() wil compare set identifiers modify second avoid duplicated IDs.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/id_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Identifiers — id_generator","text":"","code":"id_generator(   len,   minvalue = 1,   nchar = 10,   mode = c(\"numeric\", \"character\"),   ... )  id_solver(insert, to, suffix = c(\"numeric\", \"character\"), sep = \"\")"},{"path":"https://docs.ropensci.org/taxlist/reference/id_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Identifiers — id_generator","text":"len Numeric value indicating length retrieved vector identifiers. minvalue Numeric value indicating minimum value vector identifiers. Used 'mode = \"numeric\"'. nchar Numeric value indicating number characters included retrieved identifiers. Used 'mode = \"character\"'. mode Character value indicating type identifier created, either numeric (default) charcter. ... parameters passed stri_rand_strings(), actually argument 'pattern'. insert vector (either numeric character) containing IDs elements inserted database. vector (either numeric character) containing IDs elements thar already exist target database. suffix character vector indicating mode used suffix. 'numeric' 'character' partial matchings accepted . argument used character IDs. 'suffix = \"character\"', letter alphabet (vector 'letters') appended duplicated IDs. sep character value used separator original character ID appended suffix.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/id_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Identifiers — id_generator","text":"vector IDs created id_generator(), either numeric character. case id_solver(), vector, either identical 'insert' (conflicts) vector witht properties resolved IDs.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/id_generator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Identifiers — id_generator","text":"","code":"## Creating numeric IDs id_generator(len = 10, minvalue = 5) #>  [1]  5  6  7  8  9 10 11 12 13 14  ## Creating character IDs id_generator(len = 10, mode = \"character\") #>  [1] \"5pb90SUHjl\" \"sA2JOCP3Oy\" \"HgjCyj3Whg\" \"1DIdTQhwBD\" \"gUde5llzyO\" #>  [6] \"SJAWUmCi4L\" \"pGZKaBwXXH\" \"RN1SO1NYrN\" \"WbGHTvODf3\" \"z9WqiEXp1T\"  ## Solving duplicates in numeric identifiers id_solver(insert = c(3, 7, 5, 10), to = c(1:5)) #> [1] 11  7 12 10  ## Solving duplicates in bibtexkeys db_refs <- c(\"Alvarez2003\", \"Schmitz1988\", \"Li2023\") new_refs <- c(\"Alvarez2003\", \"Li2023\", \"Mueller1953\", \"Alvarez2003a\") any(duplicated(c(db_refs, new_refs))) #> [1] TRUE  solved_refs <- id_solver(insert = new_refs, to = db_refs, suffix = \"character\") solved_refs #> [1] \"Alvarez2003b\" \"Li2023a\"      \"Mueller1953\"  \"Alvarez2003a\" any(duplicated(c(db_refs, solved_refs))) #> [1] FALSE"},{"path":"https://docs.ropensci.org/taxlist/reference/indented_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Print hierarchical structure in indented lists — indented_list","title":"Print hierarchical structure in indented lists — indented_list","text":"Print taxonomic hierarchies (ranks parent-child relationships) taxlist objects indented list.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/indented_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print hierarchical structure in indented lists — indented_list","text":"","code":"indented_list(object, ...)  # S4 method for taxlist indented_list(   object,   filter,   keep_children = TRUE,   keep_parents = TRUE,   rankless_as,   indent = \" \",   lead_br = \"\",   print = TRUE,   author = TRUE,   level = FALSE,   synonyms = FALSE,   syn_encl = c(\"= \", \"\"),   secundum,   alphabetical = FALSE,   ... )"},{"path":"https://docs.ropensci.org/taxlist/reference/indented_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print hierarchical structure in indented lists — indented_list","text":"object taxlist object containing taxonomic concepts. ... arguments (used yet). filter character value (optional) matched taxon usage names produce subset 'object'. Note filter also applied synonyms, independent argument applied parameter 'synonyms'. keep_children logical value indicating whether children matched concept included result. keep_parents logical value indicating whether parents matched concept included result. rankless_as character vector indicating level (taxonomic rank) rankless taxa may set list. indent Symbol used indentation. symbol multiplied depth taxonomic rank. default blank space. can also provided named vector, different indentation symbol respective taxonomic ranks. lead_br Optional line break symbol leading indentation. may required r-markdown documents. print logical value indicating whether indented list printed console (default = TRUE). author logical value indicating whether author printed name (default = TRUE). level logical value indicating whether name level (taxonomic rank) included name (default = FALSE). synonyms logical value indicating whether synonyms included accepted names (default = FALSE). syn_encl character vector length 2 including symbols used enclose synonyms. First value set synonyms second value, synonyms. secundum character value matching name slot 'taxonViews', printed secundum (taxon view). printed default. alphabetical logical value indicating whether taxa may sorted names IDs. default FALSE, thus taxa sorted IDs. Note argument TRUE may work properly object contains homonymous taxa.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/indented_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print hierarchical structure in indented lists — indented_list","text":"'print = TRUE', indented list printed console. result, data frame elements used format names, can also assigned object.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/indented_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print hierarchical structure in indented lists — indented_list","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/indented_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print hierarchical structure in indented lists — indented_list","text":"","code":"## Show taxonomy of papyrus indented_list(Easplist, \"papyrus\") #> Cyperaceae Juss. #>  Cyperus L. #>    Cyperus papyrus L.   ## Include synonyms and taxon views indented_list(Easplist, \"papyrus\", level = TRUE, synonyms = TRUE,     secundum = \"secundum\") #> family Cyperaceae Juss. sec. The Plant List (2013) #>  genus Cyperus L. sec. Taxonomic Name Resolution Service (2018) #>    species Cyperus papyrus L. sec. African Plant Database (2012) #>    = Cyperus papyrus ssp. antiquorum (Willd.) Chiov. #>    = Cyperus papyrus ssp. nyassicus Chiov."},{"path":"https://docs.ropensci.org/taxlist/reference/levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and retrieves hierarchical levels — levels","title":"Set and retrieves hierarchical levels — levels","text":"Taxonomic hierarchies can set levels taxlist objects, ordered lower higher levels. Add taxonomic levels specific taxon concepts taxlist object. Also changes concept circumscription may implicate changes taxonomic hierarchy.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and retrieves hierarchical levels — levels","text":"","code":"levels(x)  # S3 method for taxlist levels(x)  levels(x) <- value  # S3 method for taxlist levels(x) <- value"},{"path":"https://docs.ropensci.org/taxlist/reference/levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and retrieves hierarchical levels — levels","text":"x taxlist object. value character vector replacement values levels o x.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and retrieves hierarchical levels — levels","text":"character vector taxlist object added modified taxonomic levels.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/levels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set and retrieves hierarchical levels — levels","text":"Taxonomic levels handled factors taxlist objects. levels useful creating subsets related groups (e.g. functions get_children() get_parents()). Levels combination parent-child relationships used checking consistency taxonomic lists. replacement method form levels(x) <- value also implemented.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/levels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set and retrieves hierarchical levels — levels","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and retrieves hierarchical levels — levels","text":"","code":"## Get levels of species list levels(Easplist) #> [1] \"form\"       \"variety\"    \"subspecies\" \"species\"    \"complex\"    #> [6] \"genus\"      \"family\"      ## Add aggregate as new taxonomic level levels(Easplist) <- c(\"form\", \"variety\", \"subspecies\", \"species\", \"complex\",     \"aggregate\", \"genus\", \"family\") summary(Easplist) #> object size: 761.5 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 5393  #> number of taxon concepts: 3887  #> trait entries: 311  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3698  #> concepts with children: 1343  #>  #> hierarchical levels: form < variety < subspecies < species < complex < aggregate < genus < family  #> number of concepts in level form: 2 #> number of concepts in level variety: 95 #> number of concepts in level subspecies: 71 #> number of concepts in level species: 2521 #> number of concepts in level complex: 1 #> number of concepts in level aggregate: 0 #> number of concepts in level genus: 1011 #> number of concepts in level family: 186 #>"},{"path":"https://docs.ropensci.org/taxlist/reference/match_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Search matchings between character and taxlist objects — match_names","title":"Search matchings between character and taxlist objects — match_names","text":"Names provided character vector compared names stored slot taxonNames within object class taxlist using function stringsim().","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/match_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search matchings between character and taxlist objects — match_names","text":"","code":"match_names(x, object, ...)  # S4 method for character,character match_names(   x,   object,   UsageID,   best = 1,   nomatch = TRUE,   method = \"lcs\",   cutlevel = NULL,   ... )  # S4 method for character,missing match_names(x, best, cutlevel, nomatch = TRUE, ...)  # S4 method for character,taxlist match_names(   x,   object,   show_concepts = FALSE,   accepted_only = FALSE,   include_author = FALSE,   ... )"},{"path":"https://docs.ropensci.org/taxlist/reference/match_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search matchings between character and taxlist objects — match_names","text":"x character vector names compared. object Either character vector taxlist object containing taxonomic list comparison. missing, similarity name 'x' compared rest names vector. ... arguments passed among methods. UsageID vector IDs single usage names compared list. IDs duplicated much names 'object', function retrieves error message. missing, function number every name anew (see column 'TaxonUsageID' output object). best Integer value indicating many matches displayed output. Matches value similarity considered one. Note argument overrode 'cutlevel'. nomatch logical value indicating wheter names without matches included output ('nomatch = TRUE') ('nomatch = FALSE'). method arguments passed stringsim(). cutlevel numeric value indicating cut level similarity, considering match names similarities equal bigger cut value. argument overrides 'best'. show_concepts Logical value indicating whether respective taxon concepts displayed output . accepted_only Logical value indicating whether accepted names matched usage names (including synonyms). include_author logical value indicating whether author name object (method taxlist) included matching list .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/match_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search matchings between character and taxlist objects — match_names","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/match_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search matchings between character and taxlist objects — match_names","text":"","code":"## Names to be compared species <- c(\"Cyperus papyrus\", \"Typha australis\", \"Luke Skywalker\")  ## Comparing character vectors match_names(c(\"Cyperus paper\", \"TIE fighter\"), species) #>   idx submittedname TaxonUsageID       TaxonName match similarity #> 1   1 Cyperus paper            1 Cyperus papyrus     1  0.8571429 #> 2   2   TIE fighter            2 Typha australis     1  0.3076923  ## Retrieve taxon usage names match_names(species, Easplist) #>   idx   submittedname TaxonUsageID           TaxonName #> 1   1 Cyperus papyrus          206     Cyperus papyrus #> 2   2 Typha australis        51999     Typha australis #> 3   3  Luke Skywalker        51565 Loudetia kagerensis #>                         AuthorName match similarity #> 1                               L.     1  1.0000000 #> 2                        Schumach.     1  1.0000000 #> 3 (K. Schum.) C.E. Hubb. ex Hutch.     1  0.4848485  ## Display accepted names in output match_names(x = species, object = Easplist, show_concepts = TRUE) #>   idx   submittedname TaxonUsageID           TaxonName #> 1   1 Cyperus papyrus          206     Cyperus papyrus #> 2   2 Typha australis        51999     Typha australis #> 3   3  Luke Skywalker        51565 Loudetia kagerensis #>                         AuthorName match similarity TaxonConceptID #> 1                               L.     1  1.0000000            206 #> 2                        Schumach.     1  1.0000000          50105 #> 3 (K. Schum.) C.E. Hubb. ex Hutch.     1  0.4848485          51565 #>     AcceptedTaxonName               AcceptedAuthorName   Level #> 1     Cyperus papyrus                               L. species #> 2   Typha domingensis                            Pers. species #> 3 Loudetia kagerensis (K. Schum.) C.E. Hubb. ex Hutch. species  # Using cut value for similarity match_names(x = species, object = Easplist, cutlevel = 0.8) #>   idx   submittedname TaxonUsageID       TaxonName AuthorName match similarity #> 1   1 Cyperus papyrus          206 Cyperus papyrus         L.     1  1.0000000 #> 2   2 Typha australis        51999 Typha australis  Schumach.     1  1.0000000 #> 3   2 Typha australis        53125  Typha aequalis   Schnizl.     2  0.8275862 #> 4   3  Luke Skywalker           NA            <NA>       <NA>     0         NA"},{"path":"https://docs.ropensci.org/taxlist/reference/matched_names-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Names matched with a reference taxonomic list — matched_names-class","title":"Names matched with a reference taxonomic list — matched_names-class","text":"S3 class containing results names compared reference list. class enables methods applied outputs, instance interactive selection multiple choices.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge concepts or move names — merge_taxa","title":"Merge concepts or move names — merge_taxa","text":"Merge taxon concepts form taxlist object single ones.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge concepts or move names — merge_taxa","text":"","code":"merge_taxa(object, ...)  # S3 method for taxlist merge_taxa(   object,   concepts,   level = NULL,   delete_nomatch = FALSE,   print_output = FALSE,   ... )"},{"path":"https://docs.ropensci.org/taxlist/reference/merge_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge concepts or move names — merge_taxa","text":"object, taxlist Object class taxlist. ... arguments passed methods. concepts Numeric (integer) vector including taxon concepts merged. level Character vector queried taxonomic ranks. setting works concepts missing. ranks merged respective parents merge_to_parent(). Non queried ranks well rankless concepts deleted output. delete_nomatch logical value indicating whether matched ranks (.e. top rank rankless concepts) deleted output . print_output Logical value indicating whether merged concept displayed console. Thi works vector provided concepts.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge concepts or move names — merge_taxa","text":"object class taxlist.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge concepts or move names — merge_taxa","text":"Taxon concepts indicated argument concepts merged single concept. new concept inherits ID respective attributes slots taxonRelations taxonTraits first taxon concept indicated argument concepts. convenience resulting concept can displayed setting print_output=TRUE using argument concepts. alternative application function implemented argument level, lower rank taxa merged indicated level higher (parent merged taxa higher rank).","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_taxa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge concepts or move names — merge_taxa","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge concepts or move names — merge_taxa","text":"","code":"## Merge Cyperus papyrus and Cyperus dives summary(Easplist, c(206, 197)) #> ------------------------------  #> concept ID: 206  #> view ID: 1  #> level: species  #> parent: 54853 Cyperus L.  #>  #> # accepted name:  #> 206 Cyperus papyrus L.  #>  #> # synonyms (2):  #> 52612 Cyperus papyrus ssp. antiquorum (Willd.) Chiov.  #> 52613 Cyperus papyrus ssp. nyassicus Chiov.  #> ------------------------------  #> concept ID: 197  #> view ID: 1  #> level: species  #> parent: 54853 Cyperus L.  #>  #> # accepted name:  #> 197 Cyperus dives Delile  #>  #> # synonyms (5):  #> 52000 Cyperus immensus C.B. Clarke  #> 52600 Cyperus exaltatus var. dives (Delile) C.B. Clarke  #> 52601 Cyperus alopecuroides var. dives Boeckeler  #> 52602 Cyperus immensus var. petherickii (C.B. Clarke) Kük.  #> 52603 Cyperus petherickii C.B. Clarke  #> ------------------------------  merged_cyperus <- merge_taxa(object = Easplist, concepts = c(206, 197),     print_output = TRUE) #> ------------------------------  #> concept ID: 206  #> view ID: 1  #> level: species  #> parent: 54853 Cyperus L.  #>  #> # accepted name:  #> 206 Cyperus papyrus L.  #>  #> # synonyms (8):  #> 197 Cyperus dives Delile  #> 52000 Cyperus immensus C.B. Clarke  #> 52600 Cyperus exaltatus var. dives (Delile) C.B. Clarke  #> 52601 Cyperus alopecuroides var. dives Boeckeler  #> 52602 Cyperus immensus var. petherickii (C.B. Clarke) Kük.  #> 52603 Cyperus petherickii C.B. Clarke  #> 52612 Cyperus papyrus ssp. antiquorum (Willd.) Chiov.  #> 52613 Cyperus papyrus ssp. nyassicus Chiov.  #> ------------------------------  ## Subset with Kyllinga species ky <- subset(Easplist, TaxonName == \"Kyllinga\", keep_children = TRUE,     keep_parents = TRUE) ky #> object size: 14.3 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 45  #> number of taxon concepts: 14  #> trait entries: 8  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 13  #> concepts with children: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 2 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 10 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 1 #>  indented_list(ky) #> Cyperaceae Juss. #>  Kyllinga Rottb. #>    Kyllinga alata Nees #>    Kyllinga brevifolia Rottb. #>    Kyllinga nemoralis (J.R. Forst. & G. Forst.) Dandy ex Hutch. & Dalziel #>    Kyllinga pumila Michx. #>    Kyllinga erecta Schumach. #>      Kyllinga erecta var. erecta Schumach. #>      Kyllinga erecta var. africana (Kük.) S.S. Hooper #>    Kyllinga crassipes Boeckeler #>    Kyllinga elatior Kunth #>    Kyllinga odorata Vahl #>    Kyllinga species  #>    Kyllinga bulbosa P. Beauv.   ## Merge to species and family merge_taxa(ky, level = c(\"species\", \"family\")) #> object size: 14.2 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 45  #> number of taxon concepts: 11  #> trait entries: 8  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 10  #> concepts with children: 1  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 10 #> number of concepts in level complex: 0 #> number of concepts in level genus: 0 #> number of concepts in level family: 1 #>   ## Merge to variety and genus merge_taxa(ky, level = c(\"variety\", \"genus\")) #> object size: 13.7 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 45  #> number of taxon concepts: 4  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3  #> concepts with children: 2  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 2 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 0 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 1 #>"},{"path":"https://docs.ropensci.org/taxlist/reference/merge_to_parent.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge taxa to their respective parents — merge_to_parent","title":"Merge taxa to their respective parents — merge_to_parent","text":"Aggregation taxon concepts respective parents. names aggregated concepts become synonyms target parent.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_to_parent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge taxa to their respective parents — merge_to_parent","text":"","code":"merge_to_parent(object, ...)  # S3 method for taxlist merge_to_parent(object, concept_id, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/merge_to_parent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge taxa to their respective parents — merge_to_parent","text":"object object class taxlist. ... arguments passed among methods. concept_id vector IDs (TaxonConceptID) taxa aggregated respective parents. Note one IDs simultaneously parent another ID vector, function retrieve error message.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/merge_to_parent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge taxa to their respective parents — merge_to_parent","text":"object class taxlist merged taxa.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/merge_to_parent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge taxa to their respective parents — merge_to_parent","text":"","code":"## Subset with Kyllinga species ky <- subset(Easplist, TaxonName == \"Kyllinga\", keep_children = TRUE,     keep_parents = TRUE) ky #> object size: 14.3 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 45  #> number of taxon concepts: 14  #> trait entries: 8  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 13  #> concepts with children: 3  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 2 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 10 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 1 #>  indented_list(ky) #> Cyperaceae Juss. #>  Kyllinga Rottb. #>    Kyllinga alata Nees #>    Kyllinga brevifolia Rottb. #>    Kyllinga nemoralis (J.R. Forst. & G. Forst.) Dandy ex Hutch. & Dalziel #>    Kyllinga pumila Michx. #>    Kyllinga erecta Schumach. #>      Kyllinga erecta var. erecta Schumach. #>      Kyllinga erecta var. africana (Kük.) S.S. Hooper #>    Kyllinga crassipes Boeckeler #>    Kyllinga elatior Kunth #>    Kyllinga odorata Vahl #>    Kyllinga species  #>    Kyllinga bulbosa P. Beauv.   ## Merge two species with the genus summary(ky, c(346, 50400)) #> ------------------------------  #> concept ID: 346  #> view ID: 1  #> level: species  #> parent: 54919 Kyllinga Rottb.  #>  #> # accepted name:  #> 346 Kyllinga alata Nees  #> ------------------------------  #> concept ID: 50400  #> view ID: 1  #> level: species  #> parent: 54919 Kyllinga Rottb.  #>  #> # accepted name:  #> 50400 Kyllinga elatior Kunth  #>  #> # synonyms (2):  #> 50401 Cyperus pinguis (C.B. Clarke) Mattf. & Kük.  #> 54152 Cyperus aromaticus var. elatior (Kunth) Kük.  #> ------------------------------ summary(ky, \"Kyllinga\", exact = TRUE) #> ------------------------------  #> concept ID: 54919  #> view ID: 2  #> level: genus  #> parent: 55959 Cyperaceae Juss.  #>  #> # accepted name:  #> 54921 Kyllinga Rottb.  #> ------------------------------ ky <- merge_to_parent(ky, c(346, 50400))  summary(ky, \"Kyllinga\", exact = TRUE) #> ------------------------------  #> concept ID: 54919  #> view ID: 2  #> level: genus  #> parent: 55959 Cyperaceae Juss.  #>  #> # accepted name:  #> 54921 Kyllinga Rottb.  #>  #> # synonyms (4):  #> 346 Kyllinga alata Nees  #> 50400 Kyllinga elatior Kunth  #> 50401 Cyperus pinguis (C.B. Clarke) Mattf. & Kük.  #> 54152 Cyperus aromaticus var. elatior (Kunth) Kük.  #> ------------------------------"},{"path":"https://docs.ropensci.org/taxlist/reference/overview_taxlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Function producing the overview of whole object. — overview_taxlist","title":"Function producing the overview of whole object. — overview_taxlist","text":"Function producing overview whole object.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/overview_taxlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function producing the overview of whole object. — overview_taxlist","text":"","code":"overview_taxlist(object, units, check_validity)"},{"path":"https://docs.ropensci.org/taxlist/reference/overview_taxon.html","id":null,"dir":"Reference","previous_headings":"","what":"Function producing the overview of single taxon concepts. — overview_taxon","title":"Function producing the overview of single taxon concepts. — overview_taxon","text":"Function producing overview single taxon concepts.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/overview_taxon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function producing the overview of single taxon concepts. — overview_taxon","text":"","code":"overview_taxon(object, ConceptID, display, maxsum, secundum = NULL)"},{"path":"https://docs.ropensci.org/taxlist/reference/print_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Format usage names for publications — print_name","title":"Format usage names for publications — print_name","text":"writing bio-diversity, usage names automatically inserted documents including typical italic format different elements scientific name. function print_name can applied either markdown documents graphics. Rmarkdown documents use *Cyperus papyrus* L. inserting formatted species name.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/print_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format usage names for publications — print_name","text":"","code":"print_name(object, ...)  # S3 method for character print_name(   object,   second_mention = FALSE,   style = \"markdown\",   isolate = c(\"var.\", \"ssp.\", \"subsp.\", \"f.\", \"fma.\"),   trim = c(\"spp.\", \"sp.\", \"species\"),   ... )  # S3 method for taxlist print_name(   object,   id,   concept = TRUE,   include_author = TRUE,   secundum,   style = \"markdown\",   ... )"},{"path":"https://docs.ropensci.org/taxlist/reference/print_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format usage names for publications — print_name","text":"object object class taxlist. ... arguments passed among methods. second_mention Logical value, whether genus name abbreviated . style Character value indicating alternative format italics. available options \"markdown\" (called within Rmarkdown documents), \"html\" (documents rendered html files), \"expression\" (used labels graphics), \"knitr\" (format LaTeX code). isolate character vector words (usually abbreviations) appearing middle scientific names, formatted italics. trim character vectors words appearing end scientific names formatted italics, either. id Integer containing either concept name ID. concept Logical value, whether id corresponds concept ID taxon usage name ID. include_author Logical value, whether authors name mentioned . secundum Character value indicating column slot taxonViews mentioned secundum (according ).","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/print_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format usage names for publications — print_name","text":"character value including format italic font.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/print_name.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format usage names for publications — print_name","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/print_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format usage names for publications — print_name","text":"","code":"## Example subspecies summary(Easplist, 363, secundum = \"secundum\") #> ------------------------------  #> concept ID: 363  #> view ID: 1 - African Plant Database (2012)  #> level: subspecies  #> parent: 362 Ludwigia adscendens (L.) H. Hara  #>  #> # accepted name:  #> 363 Ludwigia adscendens ssp. diffusa (Forssk.) P.H. Raven  #>  #> # synonyms (3):  #> 50037 Ludwigia stolonifera (Guill. & Perr.) P.H. Raven  #> 52001 Jussiaea stolonifera Guill. & Perr.  #> 53744 Jussiaea repens auct.  #> ------------------------------  ## Empty plot plot(x = NA, xlim = c(0, 5), ylim = c(7, 1), bty = \"n\", xaxt = \"n\", xlab = \"\",   ylab = \"options\")  ## Accepted name with author text(x = 0, y = 1, labels = print_name(Easplist, 363, style = \"expression\"),   pos = 4)  ## Including taxon view text(x = 0, y = 2, labels = print_name(Easplist, 363, style = \"expression\",   secundum = \"secundum\"), pos = 4, cex = 0.7)  ## Second mention in text text(x = 0, y = 3, labels = print_name(Easplist, 363, style = \"expression\",   second_mention = TRUE), pos = 4)  ## Using synonym text(x = 0, y = 4, labels = print_name(Easplist, 50037, style = \"expression\",   concept = FALSE), pos = 4)  ## Markdown style text(0, 5, labels = print_name(Easplist, 363, style = \"markdown\"), pos = 4)  ## HTML style text(0, 6, labels = print_name(Easplist, 363, style = \"html\"), pos = 4,     cex = 0.7)  ## LaTeX style for knitr text(x = 0, y = 7, labels = print_name(Easplist, 363, style = \"knitr\"), pos = 4,     cex = 0.7)"},{"path":"https://docs.ropensci.org/taxlist/reference/prune_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune not used taxonomic ranks — prune_levels","title":"Prune not used taxonomic ranks — prune_levels","text":"Taxonomic ranks without taxon concepts pruned taxlist objects.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/prune_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune not used taxonomic ranks — prune_levels","text":"","code":"prune_levels(object, ...)  # S3 method for taxlist prune_levels(object, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/prune_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune not used taxonomic ranks — prune_levels","text":"object object class taxlist. ... arguments passed among methods (yet use).","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/prune_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune not used taxonomic ranks — prune_levels","text":"object class taxlist pruned taxonomic ranks.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/prune_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prune not used taxonomic ranks — prune_levels","text":"","code":"## Subset species belonging to Cyperus Cyperus <- subset(Easplist, TaxonName == \"Cyperus\", slot = \"taxonNames\",     keep_children = TRUE, keep_parents = TRUE) Cyperus #> object size: 21.8 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 99  #> number of taxon concepts: 45  #> trait entries: 16  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 44  #> concepts with children: 6  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 3 #> number of concepts in level subspecies: 2 #> number of concepts in level species: 38 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 1 #>   ## Prune not used ranks prune_levels(Cyperus) #> object size: 21.7 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 99  #> number of taxon concepts: 45  #> trait entries: 16  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 44  #> concepts with children: 6  #>  #> hierarchical levels: variety < subspecies < species < genus < family  #> number of concepts in level variety: 3 #> number of concepts in level subspecies: 2 #> number of concepts in level species: 38 #> number of concepts in level genus: 1 #> number of concepts in level family: 1 #>"},{"path":"https://docs.ropensci.org/taxlist/reference/replace_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Data manipulation. — replace_x","title":"Data manipulation. — replace_x","text":"series functions designed fast coding replacements , internal functions workflows dealing information stored vectors data frames. functions especially useful handling functional traits stored taxlist objects. replace_x() used exchange values vectors. replace_idx() changes values vectors matching indices conditions. function replace_na() works way replace_idx() insert values empty elements (NAs). function insert_rows() add rows columns time. function used new table appended another sharing part columns.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/replace_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data manipulation. — replace_x","text":"","code":"replace_x(x, old, new)  replace_idx(x, idx1 = x, idx2 = idx1, new)  replace_na(x, idx1, idx2 = idx1, new)  insert_rows(x, y)"},{"path":"https://docs.ropensci.org/taxlist/reference/replace_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data manipulation. — replace_x","text":"x vector modified. case insert_rows(), x data frame. old vector values replaced replace_x() vector. new vector containing values inserted, either comparing values using indices. idx1, idx2 Indices applied value replacements match x new, respectively. idx2 provided, assumed equivalent idx1. y data frame including rows (columns) inserted x.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/replace_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data manipulation. — replace_x","text":"vector data frame modified values.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/replace_x.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data manipulation. — replace_x","text":"Miguel Alvarez.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/replace_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data manipulation. — replace_x","text":"","code":"## Replace values in vector replace_x(x = letters, old = c(\"b\", \"p\", \"f\"), new = c(\"bee\", \"pork\", \"fungus\")) #>  [1] \"a\"      \"bee\"    \"c\"      \"d\"      \"e\"      \"fungus\" \"g\"      \"h\"      #>  [9] \"i\"      \"j\"      \"k\"      \"l\"      \"m\"      \"n\"      \"o\"      \"pork\"   #> [17] \"q\"      \"r\"      \"s\"      \"t\"      \"u\"      \"v\"      \"w\"      \"x\"      #> [25] \"y\"      \"z\"       ## Replace values using indices replace_idx(x = letters, idx1 = 1:length(letters), idx2 = c(2, 7, 17),   new = c(\"second\", \"seventh\", \"seventeenth\")) #>  [1] \"a\"           \"second\"      \"c\"           \"d\"           \"e\"           #>  [6] \"f\"           \"seventh\"     \"h\"           \"i\"           \"j\"           #> [11] \"k\"           \"l\"           \"m\"           \"n\"           \"o\"           #> [16] \"p\"           \"seventeenth\" \"r\"           \"s\"           \"t\"           #> [21] \"u\"           \"v\"           \"w\"           \"x\"           \"y\"           #> [26] \"z\"            ## Replace values if they are NAs letters[2] <- NA replace_na(x = letters, idx1 = 1:length(letters), idx2 = c(1:3),   new = c(\"alpha\", \"beta\", \"zeta\")) #>  [1] \"a\"    \"beta\" \"c\"    \"d\"    \"e\"    \"f\"    \"g\"    \"h\"    \"i\"    \"j\"    #> [11] \"k\"    \"l\"    \"m\"    \"n\"    \"o\"    \"p\"    \"q\"    \"r\"    \"s\"    \"t\"    #> [21] \"u\"    \"v\"    \"w\"    \"x\"    \"y\"    \"z\"     ## The same applications but this time for functional traits summary(as.factor(Easplist$life_form)) #>   acropleustophyte        chamaephyte     climbing_plant facultative_annual  #>                  8                 25                 25                 20  #>    obligate_annual       phanerophyte   pleustohelophyte         reed_plant  #>                114                 26                  8                 14  #>      reptant_plant      tussock_plant               NA's  #>                 19                 52               3576   # Merge annuals Easplist@taxonTraits$lifeform <- replace_x(x = Easplist@taxonTraits$life_form,   old = c(\"obligate_annual\", \"facultative_annual\"), new = c(\"annual\", \"annual\")) summary(as.factor(Easplist$lifeform)) #> acropleustophyte           annual      chamaephyte   climbing_plant  #>                8              134               25               25  #>     phanerophyte pleustohelophyte       reed_plant    reptant_plant  #>               26                8               14               19  #>    tussock_plant             NA's  #>               52             3576   # The same effect Easplist@taxonTraits$lifeform <- replace_idx(x = Easplist@taxonTraits$life_form,   idx1 = grepl(\"annual\", Easplist@taxonTraits$life_form), idx2 = TRUE,   new = \"annual\") summary(as.factor(Easplist$lifeform)) #> acropleustophyte           annual      chamaephyte   climbing_plant  #>                8              134               25               25  #>     phanerophyte pleustohelophyte       reed_plant    reptant_plant  #>               26                8               14               19  #>    tussock_plant             NA's  #>               52             3576   ## Merge data frames including new columns data(iris) iris$Species <- paste(iris$Species) new_iris <- data.frame(Species = rep(\"humilis\", 2), Height = c(15, 20),   stringsAsFactors = FALSE) insert_rows(iris, new_iris) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species Height #> 1            5.1         3.5          1.4         0.2     setosa     NA #> 2            4.9         3.0          1.4         0.2     setosa     NA #> 3            4.7         3.2          1.3         0.2     setosa     NA #> 4            4.6         3.1          1.5         0.2     setosa     NA #> 5            5.0         3.6          1.4         0.2     setosa     NA #> 6            5.4         3.9          1.7         0.4     setosa     NA #> 7            4.6         3.4          1.4         0.3     setosa     NA #> 8            5.0         3.4          1.5         0.2     setosa     NA #> 9            4.4         2.9          1.4         0.2     setosa     NA #> 10           4.9         3.1          1.5         0.1     setosa     NA #> 11           5.4         3.7          1.5         0.2     setosa     NA #> 12           4.8         3.4          1.6         0.2     setosa     NA #> 13           4.8         3.0          1.4         0.1     setosa     NA #> 14           4.3         3.0          1.1         0.1     setosa     NA #> 15           5.8         4.0          1.2         0.2     setosa     NA #> 16           5.7         4.4          1.5         0.4     setosa     NA #> 17           5.4         3.9          1.3         0.4     setosa     NA #> 18           5.1         3.5          1.4         0.3     setosa     NA #> 19           5.7         3.8          1.7         0.3     setosa     NA #> 20           5.1         3.8          1.5         0.3     setosa     NA #> 21           5.4         3.4          1.7         0.2     setosa     NA #> 22           5.1         3.7          1.5         0.4     setosa     NA #> 23           4.6         3.6          1.0         0.2     setosa     NA #> 24           5.1         3.3          1.7         0.5     setosa     NA #> 25           4.8         3.4          1.9         0.2     setosa     NA #> 26           5.0         3.0          1.6         0.2     setosa     NA #> 27           5.0         3.4          1.6         0.4     setosa     NA #> 28           5.2         3.5          1.5         0.2     setosa     NA #> 29           5.2         3.4          1.4         0.2     setosa     NA #> 30           4.7         3.2          1.6         0.2     setosa     NA #> 31           4.8         3.1          1.6         0.2     setosa     NA #> 32           5.4         3.4          1.5         0.4     setosa     NA #> 33           5.2         4.1          1.5         0.1     setosa     NA #> 34           5.5         4.2          1.4         0.2     setosa     NA #> 35           4.9         3.1          1.5         0.2     setosa     NA #> 36           5.0         3.2          1.2         0.2     setosa     NA #> 37           5.5         3.5          1.3         0.2     setosa     NA #> 38           4.9         3.6          1.4         0.1     setosa     NA #> 39           4.4         3.0          1.3         0.2     setosa     NA #> 40           5.1         3.4          1.5         0.2     setosa     NA #> 41           5.0         3.5          1.3         0.3     setosa     NA #> 42           4.5         2.3          1.3         0.3     setosa     NA #> 43           4.4         3.2          1.3         0.2     setosa     NA #> 44           5.0         3.5          1.6         0.6     setosa     NA #> 45           5.1         3.8          1.9         0.4     setosa     NA #> 46           4.8         3.0          1.4         0.3     setosa     NA #> 47           5.1         3.8          1.6         0.2     setosa     NA #> 48           4.6         3.2          1.4         0.2     setosa     NA #> 49           5.3         3.7          1.5         0.2     setosa     NA #> 50           5.0         3.3          1.4         0.2     setosa     NA #> 51           7.0         3.2          4.7         1.4 versicolor     NA #> 52           6.4         3.2          4.5         1.5 versicolor     NA #> 53           6.9         3.1          4.9         1.5 versicolor     NA #> 54           5.5         2.3          4.0         1.3 versicolor     NA #> 55           6.5         2.8          4.6         1.5 versicolor     NA #> 56           5.7         2.8          4.5         1.3 versicolor     NA #> 57           6.3         3.3          4.7         1.6 versicolor     NA #> 58           4.9         2.4          3.3         1.0 versicolor     NA #> 59           6.6         2.9          4.6         1.3 versicolor     NA #> 60           5.2         2.7          3.9         1.4 versicolor     NA #> 61           5.0         2.0          3.5         1.0 versicolor     NA #> 62           5.9         3.0          4.2         1.5 versicolor     NA #> 63           6.0         2.2          4.0         1.0 versicolor     NA #> 64           6.1         2.9          4.7         1.4 versicolor     NA #> 65           5.6         2.9          3.6         1.3 versicolor     NA #> 66           6.7         3.1          4.4         1.4 versicolor     NA #> 67           5.6         3.0          4.5         1.5 versicolor     NA #> 68           5.8         2.7          4.1         1.0 versicolor     NA #> 69           6.2         2.2          4.5         1.5 versicolor     NA #> 70           5.6         2.5          3.9         1.1 versicolor     NA #> 71           5.9         3.2          4.8         1.8 versicolor     NA #> 72           6.1         2.8          4.0         1.3 versicolor     NA #> 73           6.3         2.5          4.9         1.5 versicolor     NA #> 74           6.1         2.8          4.7         1.2 versicolor     NA #> 75           6.4         2.9          4.3         1.3 versicolor     NA #> 76           6.6         3.0          4.4         1.4 versicolor     NA #> 77           6.8         2.8          4.8         1.4 versicolor     NA #> 78           6.7         3.0          5.0         1.7 versicolor     NA #> 79           6.0         2.9          4.5         1.5 versicolor     NA #> 80           5.7         2.6          3.5         1.0 versicolor     NA #> 81           5.5         2.4          3.8         1.1 versicolor     NA #> 82           5.5         2.4          3.7         1.0 versicolor     NA #> 83           5.8         2.7          3.9         1.2 versicolor     NA #> 84           6.0         2.7          5.1         1.6 versicolor     NA #> 85           5.4         3.0          4.5         1.5 versicolor     NA #> 86           6.0         3.4          4.5         1.6 versicolor     NA #> 87           6.7         3.1          4.7         1.5 versicolor     NA #> 88           6.3         2.3          4.4         1.3 versicolor     NA #> 89           5.6         3.0          4.1         1.3 versicolor     NA #> 90           5.5         2.5          4.0         1.3 versicolor     NA #> 91           5.5         2.6          4.4         1.2 versicolor     NA #> 92           6.1         3.0          4.6         1.4 versicolor     NA #> 93           5.8         2.6          4.0         1.2 versicolor     NA #> 94           5.0         2.3          3.3         1.0 versicolor     NA #> 95           5.6         2.7          4.2         1.3 versicolor     NA #> 96           5.7         3.0          4.2         1.2 versicolor     NA #> 97           5.7         2.9          4.2         1.3 versicolor     NA #> 98           6.2         2.9          4.3         1.3 versicolor     NA #> 99           5.1         2.5          3.0         1.1 versicolor     NA #> 100          5.7         2.8          4.1         1.3 versicolor     NA #> 101          6.3         3.3          6.0         2.5  virginica     NA #> 102          5.8         2.7          5.1         1.9  virginica     NA #> 103          7.1         3.0          5.9         2.1  virginica     NA #> 104          6.3         2.9          5.6         1.8  virginica     NA #> 105          6.5         3.0          5.8         2.2  virginica     NA #> 106          7.6         3.0          6.6         2.1  virginica     NA #> 107          4.9         2.5          4.5         1.7  virginica     NA #> 108          7.3         2.9          6.3         1.8  virginica     NA #> 109          6.7         2.5          5.8         1.8  virginica     NA #> 110          7.2         3.6          6.1         2.5  virginica     NA #> 111          6.5         3.2          5.1         2.0  virginica     NA #> 112          6.4         2.7          5.3         1.9  virginica     NA #> 113          6.8         3.0          5.5         2.1  virginica     NA #> 114          5.7         2.5          5.0         2.0  virginica     NA #> 115          5.8         2.8          5.1         2.4  virginica     NA #> 116          6.4         3.2          5.3         2.3  virginica     NA #> 117          6.5         3.0          5.5         1.8  virginica     NA #> 118          7.7         3.8          6.7         2.2  virginica     NA #> 119          7.7         2.6          6.9         2.3  virginica     NA #> 120          6.0         2.2          5.0         1.5  virginica     NA #> 121          6.9         3.2          5.7         2.3  virginica     NA #> 122          5.6         2.8          4.9         2.0  virginica     NA #> 123          7.7         2.8          6.7         2.0  virginica     NA #> 124          6.3         2.7          4.9         1.8  virginica     NA #> 125          6.7         3.3          5.7         2.1  virginica     NA #> 126          7.2         3.2          6.0         1.8  virginica     NA #> 127          6.2         2.8          4.8         1.8  virginica     NA #> 128          6.1         3.0          4.9         1.8  virginica     NA #> 129          6.4         2.8          5.6         2.1  virginica     NA #> 130          7.2         3.0          5.8         1.6  virginica     NA #> 131          7.4         2.8          6.1         1.9  virginica     NA #> 132          7.9         3.8          6.4         2.0  virginica     NA #> 133          6.4         2.8          5.6         2.2  virginica     NA #> 134          6.3         2.8          5.1         1.5  virginica     NA #> 135          6.1         2.6          5.6         1.4  virginica     NA #> 136          7.7         3.0          6.1         2.3  virginica     NA #> 137          6.3         3.4          5.6         2.4  virginica     NA #> 138          6.4         3.1          5.5         1.8  virginica     NA #> 139          6.0         3.0          4.8         1.8  virginica     NA #> 140          6.9         3.1          5.4         2.1  virginica     NA #> 141          6.7         3.1          5.6         2.4  virginica     NA #> 142          6.9         3.1          5.1         2.3  virginica     NA #> 143          5.8         2.7          5.1         1.9  virginica     NA #> 144          6.8         3.2          5.9         2.3  virginica     NA #> 145          6.7         3.3          5.7         2.5  virginica     NA #> 146          6.7         3.0          5.2         2.3  virginica     NA #> 147          6.3         2.5          5.0         1.9  virginica     NA #> 148          6.5         3.0          5.2         2.0  virginica     NA #> 149          6.2         3.4          5.4         2.3  virginica     NA #> 150          5.9         3.0          5.1         1.8  virginica     NA #> 151           NA          NA           NA          NA    humilis     15 #> 152           NA          NA           NA          NA    humilis     20"},{"path":"https://docs.ropensci.org/taxlist/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset method for taxlist objects — subset","title":"Subset method for taxlist objects — subset","text":"Subset taxlist objects done applying either logical operations pattern matchings. Subsets can referred information contained either slot taxonNames, taxonRelations taxonTraits.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset method for taxlist objects — subset","text":"","code":"# S4 method for taxlist subset(   x,   subset,   slot = \"names\",   keep_children = FALSE,   keep_parents = FALSE,   ... )"},{"path":"https://docs.ropensci.org/taxlist/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset method for taxlist objects — subset","text":"x Object class taxlist. subset Logical vector logical operation apply subset. slot Character value indicating slot used subset. keep_children Logical value applied hierarchical structures. keep_parents Logical value applied hierarchical structures. ... arguments passed methods.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset method for taxlist objects — subset","text":"object class taxlist.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/subset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset method for taxlist objects — subset","text":"argument subset applied slot specified argument slot. argument also allows partial matchings. Arguments keep_children keep_parents applied objects including parent-child relationships. arguments set FALSE (default), children parents selected taxon concepts included subset. aware subset() work properly inside function definitions.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/subset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Subset method for taxlist objects — subset","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset method for taxlist objects — subset","text":"","code":"## Produce a data set with only reed plants sp_list <- subset(x = Easplist, subset = life_form == \"reed_plant\",     slot = \"taxonTraits\", keep_parents = TRUE) sp_list #> object size: 22.3 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 100  #> number of taxon concepts: 27  #> trait entries: 14  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 24  #> concepts with children: 13  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 14 #> number of concepts in level complex: 0 #> number of concepts in level genus: 10 #> number of concepts in level family: 3 #>   summary(as.factor(sp_list$life_form)) #> reed_plant       NA's  #>         14         13"},{"path":"https://docs.ropensci.org/taxlist/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print overviews for taxlist Objects and their content — summary","title":"Print overviews for taxlist Objects and their content — summary","text":"method display either overview content taxlist objects overview selected taxa.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print overviews for taxlist Objects and their content — summary","text":"","code":"# S4 method for taxlist summary(   object,   ConceptID,   units = \"Kb\",   check_validity = TRUE,   display = \"both\",   maxsum = 5,   secundum = NULL,   exact = FALSE,   ... )  # S4 method for taxlist show(object)  # S4 method for taxlist print(x, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print overviews for taxlist Objects and their content — summary","text":"object, x taxlist object. ConceptID IDs concepts displayed summary. units Character value indicating units shown object's allocated space. check_validity Logical value indicating whether validity object checked . display Character value indicating field displayed (see details). maxsum Integer indicating maximum number displayed taxa. secundum character value indicating column slottaxonViews displayed summary. exact logical value indicating whether taxon names match exact argument parameter 'ConceptID'. works 'ConceptID' provided character value  keyword ''. ... arguments passed another methods.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print overviews for taxlist Objects and their content — summary","text":"general overview indicating number names, concepts taxon views included taxlist objects. argument ConceptID vector concept IDs names matched grepl(), display names included concept produced. Alternative can use taxon=\"\" order get listing names concepts included object (truncated input number maxsum). summaries applied concepts, three alternative displays names using argument display. Use display=\"name\" show value TaxonName, display=\"author\" show value AuthorName display=\"\" show values. values taken slot taxonNames. big objects recommended set units=\"Mb\" (see also object.size() alternatives).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print overviews for taxlist Objects and their content — summary","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print overviews for taxlist Objects and their content — summary","text":"","code":"## summary of the object summary(Easplist, units = \"Mb\") #> object size: 0.7 Mb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 5393  #> number of taxon concepts: 3887  #> trait entries: 311  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3698  #> concepts with children: 1343  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 2 #> number of concepts in level variety: 95 #> number of concepts in level subspecies: 71 #> number of concepts in level species: 2521 #> number of concepts in level complex: 1 #> number of concepts in level genus: 1011 #> number of concepts in level family: 186 #>   ## the same output summary(Easplist) #> object size: 761.4 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 5393  #> number of taxon concepts: 3887  #> trait entries: 311  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3698  #> concepts with children: 1343  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 2 #> number of concepts in level variety: 95 #> number of concepts in level subspecies: 71 #> number of concepts in level species: 2521 #> number of concepts in level complex: 1 #> number of concepts in level genus: 1011 #> number of concepts in level family: 186 #>  show(Easplist) #> object size: 761.4 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 5393  #> number of taxon concepts: 3887  #> trait entries: 311  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3698  #> concepts with children: 1343  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 2 #> number of concepts in level variety: 95 #> number of concepts in level subspecies: 71 #> number of concepts in level species: 2521 #> number of concepts in level complex: 1 #> number of concepts in level genus: 1011 #> number of concepts in level family: 186 #>  print(Easplist) #> object size: 761.4 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 5393  #> number of taxon concepts: 3887  #> trait entries: 311  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3698  #> concepts with children: 1343  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 2 #> number of concepts in level variety: 95 #> number of concepts in level subspecies: 71 #> number of concepts in level species: 2521 #> number of concepts in level complex: 1 #> number of concepts in level genus: 1011 #> number of concepts in level family: 186 #>  Easplist #> object size: 761.4 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 5393  #> number of taxon concepts: 3887  #> trait entries: 311  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 3698  #> concepts with children: 1343  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 2 #> number of concepts in level variety: 95 #> number of concepts in level subspecies: 71 #> number of concepts in level species: 2521 #> number of concepts in level complex: 1 #> number of concepts in level genus: 1011 #> number of concepts in level family: 186 #>   ## summary for two taxa summary(Easplist, c(51128, 51140)) #> ------------------------------  #> concept ID: 51128  #> view ID: 1  #> level: species  #> parent: 54818 Cheilanthes Sw.  #>  #> # accepted name:  #> 51128 Cheilanthes quadripinnata Kuhn  #>  #> # synonyms (1):  #> 51129 Pellaea quadripinnata (Forssk.) Prantl  #> ------------------------------  #> concept ID: 51140  #> view ID: 1  #> level: species  #> parent: 55364 Haplopteris C. Presl  #>  #> # accepted name:  #> 51140 Haplopteris volkensii (Hieron.) E.H. Crane  #>  #> # synonyms (1):  #> 51141 Vittaria volkensii Hieron.  #> ------------------------------  ## summary by matching a name summary(Easplist, \"Acmella\") #> ------------------------------  #> concept ID: 20  #> view ID: 1  #> level: species  #> parent: 54760 Acmella Pers.  #>  #> # accepted name:  #> 20 Acmella caulirhiza Delile  #>  #> # synonyms (19):  #> 50001 Spilanthes mauritiana (A. Rich. ex Pers.) DC.  #> 52448 Spilanthes caulirhiza (Delile) DC.  #> 52449 Acmella mauritiana A. Rich. ex Pers.  #> 52450 Spilanthes africana DC.  #> 52451 Spilanthes abyssinica Sch. Bip. ex A. Rich.  #> 52452 Eclipta filicaulis Schumach. & Thonn.  #> 52453 Spilanthes filicaulis (Schumach. & Thonn.) C. D. Adams  #> 52454 Spilanthes acmella var. acmella (L.) Murray  #> 52455 Verbesina acmella L.  #> 52456 Spilanthes acmella (L.) Murray  #> 52457 Blainvillea acmella (L.) Philipson  #> 52458 Eclipta latifolia L. f.  #> 52459 Blainvillea latifolia (L. f.) DC.  #> 52460 Blainvillea rhomboidea Cass.  #> 52461 Blainvillea dalla-vedovae A. Terracc.  #> 52462 Verbesina dichotoma Murray  #> 52463 Blainvillea dichotoma (Murray) Stewart  #> 52464 Spilanthes caulirhiza var. madagascariensis DC.  #> 52465 Spilanthes mauritiana f. madagascariensis (DC.) A. H. Moore  #> ------------------------------  #> concept ID: 21  #> view ID: 1  #> level: species  #> parent: 54760 Acmella Pers.  #>  #> # accepted name:  #> 21 Acmella uliginosa (Sw.) Cass.  #>  #> # synonyms (1):  #> 50002 Spilanthes uliginosa Sw.  #> ------------------------------  #> concept ID: 54760  #> view ID: 2  #> level: genus  #> parent: 55936 Compositae Giseke  #>  #> # accepted name:  #> 54762 Acmella Pers.  #> ------------------------------  ## summary for the first 10 taxa summary(object = Easplist, ConceptID = \"all\", maxsum = 10) #> ------------------------------  #> concept ID: 1  #> view ID: 1  #> level: species  #> parent: 54753 Abelmoschus Medik.  #>  #> # accepted name:  #> 1 Abelmoschus esculentus (L.) Moench  #>  #> # synonyms (1):  #> 52313 Hibiscus esculentus L.  #> ------------------------------  #> concept ID: 2  #> view ID: 1  #> level: species  #> parent: 54754 Abutilon Mill.  #>  #> # accepted name:  #> 2 Abutilon indicum (L.)  #> ------------------------------  #> concept ID: 3  #> view ID: 1  #> level: species  #> parent: 54754 Abutilon Mill.  #>  #> # accepted name:  #> 3 Abutilon mauritianum (Jacq.) Medik.  #>  #> # synonyms (1):  #> 50361 Pavonia patens (Andrews) Chiov.  #> ------------------------------  #> concept ID: 4  #> view ID: 1  #> level: species  #> parent: 54755 Acacia Mill.  #>  #> # accepted name:  #> 4 Acacia drepanolobium Harms ex Y. Sjöstedt  #> ------------------------------  #> concept ID: 5  #> view ID: 1  #> level: species  #> parent: 54755 Acacia Mill.  #>  #> # accepted name:  #> 5 Acacia elatior Brenan  #> ------------------------------  #> concept ID: 6  #> view ID: 1  #> level: species  #> parent: 54755 Acacia Mill.  #>  #> # accepted name:  #> 6 Acacia kirkii Oliv.  #> ------------------------------  #> concept ID: 7  #> view ID: 1  #> level: species  #> parent: 54755 Acacia Mill.  #>  #> # accepted name:  #> 7 Acacia mearnsii De Wild.  #> ------------------------------  #> concept ID: 8  #> view ID: 1  #> level: species  #> parent: 54755 Acacia Mill.  #>  #> # accepted name:  #> 8 Acacia mellifera (Vahl) Benth.  #> ------------------------------  #> concept ID: 9  #> view ID: 1  #> level: species  #> parent: 54755 Acacia Mill.  #>  #> # accepted name:  #> 9 Acacia polyacantha Willd.  #> ------------------------------  #> concept ID: 10  #> view ID: 1  #> level: species  #> parent: 54755 Acacia Mill.  #>  #> # accepted name:  #> 10 Acacia reficiens Wawra  #> ------------------------------"},{"path":"https://docs.ropensci.org/taxlist/reference/tax2traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set taxonomic information as taxon traits — tax2traits","title":"Set taxonomic information as taxon traits — tax2traits","text":"Taxonomic classification can included taxlist objects within information provided slot taxonRelations. Nevertheless, statistical analyses may convenient insert information slot taxonTraits.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tax2traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set taxonomic information as taxon traits — tax2traits","text":"","code":"tax2traits(object, ...)  # S3 method for taxlist tax2traits(object, get_names = FALSE, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/tax2traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set taxonomic information as taxon traits — tax2traits","text":"object object class taxlist. ... arguments passed among methods. get_names Logical value indicating whether taxon names retrieved instead taxon IDs.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tax2traits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set taxonomic information as taxon traits — tax2traits","text":"object class taxlist taxonomy added traits.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tax2traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set taxonomic information as taxon traits — tax2traits","text":"function can applied objects containing parent-child relationships information taxonomic levels.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tax2traits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set taxonomic information as taxon traits — tax2traits","text":"Miguel Alvarez kamapu78@gmail.com.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tax2traits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set taxonomic information as taxon traits — tax2traits","text":"","code":"## Family Acanthaceae with children Acanthaceae <- subset(x = Easplist, subset = TaxonName == \"Acanthaceae\",   slot = \"names\", keep_children = TRUE) summary(Acanthaceae) #> object size: 29.9 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 143  #> number of taxon concepts: 113  #> trait entries: 9  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 112  #> concepts with children: 28  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 2 #> number of concepts in level subspecies: 3 #> number of concepts in level species: 84 #> number of concepts in level complex: 0 #> number of concepts in level genus: 23 #> number of concepts in level family: 1 #>   ## Insert taxonomy to taxon traits Acanthaceae <- tax2traits(Acanthaceae, get_names = TRUE) head(taxon_traits(Acanthaceae)) #>     TaxonConceptID       life_form variety subspecies               species #> 14              59 obligate_annual    <NA>       <NA>   Asystasia gangetica #> 15              60 obligate_annual    <NA>       <NA>  Asystasia mysurensis #> 97             319 obligate_annual    <NA>       <NA> Hygrophila auriculata #> 108            341    phanerophyte    <NA>       <NA>     Justicia betonica #> 238          50264  climbing_plant    <NA>       <NA>      Thunbergia alata #> 241          50423    phanerophyte    <NA>       <NA>    Hypoestes aristata #>          genus      family #> 14   Asystasia Acanthaceae #> 15   Asystasia Acanthaceae #> 97  Hygrophila Acanthaceae #> 108   Justicia Acanthaceae #> 238 Thunbergia Acanthaceae #> 241  Hypoestes Acanthaceae"},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent taxonomic lists. — taxlist-class","title":"An S4 class to represent taxonomic lists. — taxlist-class","text":"Class taxonomic lists including synonyms, hierarchical ranks, parent-child relationships, taxon views taxon traits. Note taxon becomes identifier, represented column TaxonConceptID slot taxonRelations, analogous primary key relational database. identifier restricted integer taxlist specific object. way, taxon usage name identifier column TaxonUsageID, slot taxonNames. column ViewID slot taxonViews identifier taxon view.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent taxonomic lists. — taxlist-class","text":"taxonNames (data.frame) Table taxon usage names (accepted names synonyms). taxonRelations (data.frame) Relations concepts, accepted names, basionyms, parents hierarchical level. taxonTraits Table taxon traits. taxonViews References used determine respective concept circumscription.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An S4 class to represent taxonomic lists. — taxlist-class","text":"Alvarez M, Luebert F (2018). taxlist package: managing plant taxonomic lists R. Biodiversity Data Journal 6: e23635. doi:10.3897/bdj.6.e23635","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An S4 class to represent taxonomic lists. — taxlist-class","text":"Miguel Alvarez","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 class to represent taxonomic lists. — taxlist-class","text":"","code":"## Class 'taxlist' showClass(\"taxlist\") #> Class \"taxlist\" [package \"taxlist\"] #>  #> Slots: #>                                                                    #> Name:      taxonNames taxonRelations     taxonViews    taxonTraits #> Class:     data.frame     data.frame      df.lib_df     data.frame  ## Create an empty object sp_list <- new(\"taxlist\") sp_list #> object size: 5.1 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 0  #> number of taxon concepts: 0  #> trait entries: 0  #> number of trait variables: 0  #> taxon views: 0  #>"},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-package.html","id":null,"dir":"Reference","previous_headings":"","what":"taxlist: Handling taxonomic lists. — taxlist-package","title":"taxlist: Handling taxonomic lists. — taxlist-package","text":"class taxlist defined package using S4 language. main task taxlist objects keep taxonomic coherence information included taxonomic lists implement functions (methods) proper data handling. Objects class taxlist can included objects, instance biodiversity records done package vegtable.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"taxlist: Handling taxonomic lists. — taxlist-package","text":"class taxlist defined package using S4 language. main task taxlist objects keep taxonomic coherence information included taxonomic lists implement functions (methods) proper data handling. Objects class taxlist can included objects, instance biodiversity records done package vegtable. detailed description package, see Alvarez & Luebert (2018).","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"taxlist: Handling taxonomic lists. — taxlist-package","text":"Alvarez M, Luebert F (2018). taxlist package: managing plant taxonomic lists R. Biodiversity Data Journal 6: e23635. doi:10.3897/bdj.6.e23635","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"taxlist: Handling taxonomic lists. — taxlist-package","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce taxlist objects to data frames — taxlist2df","title":"Coerce taxlist objects to data frames — taxlist2df","text":"Transform taxlist objects data frames.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce taxlist objects to data frames — taxlist2df","text":"","code":"taxlist2df(x, ...)  # S3 method for taxlist taxlist2df(   x,   include_traits = FALSE,   include_views = FALSE,   standard = c(\"taxlist\", \"dwc\"),   ... )"},{"path":"https://docs.ropensci.org/taxlist/reference/taxlist2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce taxlist objects to data frames — taxlist2df","text":"x taxlist object coerced. ... arguments passed among methods. include_traits logical value indicating whether taxon concept attributes included output . include_views logical value indicating whether taxon views included output . standard character value indicating standard used name columns output data frame. Per default taxlist names used can set dwc renaming columns according Darwin Core.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle information on taxon usage names. — taxon_names","title":"Handle information on taxon usage names. — taxon_names","text":"slot taxonNames taxlist objects contains taxon usage names respective taxon. functions assist access modification entries names.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle information on taxon usage names. — taxon_names","text":"","code":"taxon_names(taxlist, ...)  # S3 method for taxlist taxon_names(taxlist, ...)  taxon_names(taxlist, ...) <- value  # S3 method for taxlist taxon_names(taxlist, ...) <- value  add_synonym(taxlist, ...)  # S3 method for taxlist add_synonym(taxlist, ConceptID, TaxonName, AuthorName, ...)  update_name(taxlist, ...)  # S3 method for taxlist update_name(taxlist, UsageID, ...)  delete_name(taxlist, ...)  # S3 method for taxlist delete_name(taxlist, UsageID, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle information on taxon usage names. — taxon_names","text":"taxlist taxlist object modified. ... arguments passed among methods. update_name vectors including variables updated respective taxon usage ID. value data frame used new slot taxonNames taxlist. ConceptID Numeric vector indicating concept ID synonyms added. TaxonName, AuthorName Character values used new names (synonyms). UsageID Numeric vector indicating taxon usage IDs updated.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle information on taxon usage names. — taxon_names","text":"data frame , case replacement method, taxlist object modified slot taxonNames.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Handle information on taxon usage names. — taxon_names","text":"replacement method taxon_names<- quick alternative include names empty taxlist objects. function add_synonym() works adding names existing taxon concepts. adding new taxon concepts well use add_concept().","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handle information on taxon usage names. — taxon_names","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle information on taxon usage names. — taxon_names","text":"","code":"## Display of slot 'taxonNames' Euclea <- subset(x = Easplist, subset = charmatch(\"Euclea\", TaxonName),   slot = \"names\", keep_children = TRUE) Euclea #> object size: 7 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 3  #> number of taxon concepts: 2  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 1  #> concepts with children: 1  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 1 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 0 #>  taxon_names(Euclea) #>      TaxonUsageID TaxonConceptID                       TaxonName #> 297           269            269                Euclea divinorum #> 298         50787            269 Euclea divinorum ssp. keniensis #> 5043        55709          55707                          Euclea #>              AuthorName #> 297               Hiern #> 298  (R. E. Fr.) de Wit #> 5043                     ## Insert a synonym to Diospyros scabra summary(Easplist, \"Diospyros scabra\") #> ------------------------------  #> concept ID: 51793  #> view ID: 1  #> level: species  #> parent: 55171 Diospyros L.  #>  #> # accepted name:  #> 51793 Diospyros scabra (Chiov.) Cufod.  #> ------------------------------ sp_list <- add_synonym(taxlist = Easplist, ConceptID = 51793,   TaxonName = \"Maba scabra\", AuthorName = \"Chiov.\") summary(sp_list, \"Diospyros scabra\") #> ------------------------------  #> concept ID: 51793  #> view ID: 1  #> level: species  #> parent: 55171 Diospyros L.  #>  #> # accepted name:  #> 51793 Diospyros scabra (Chiov.) Cufod.  #>  #> # synonyms (1):  #> 56139 Maba scabra Chiov.  #> ------------------------------  ## Delete a synonym of Launaea cornuta summary(sp_list, \"Launaea cornuta\") #> ------------------------------  #> concept ID: 355  #> view ID: 1  #> level: species  #> parent: 54923 Launaea Cass.  #>  #> # accepted name:  #> 355 Launaea cornuta (Hochst. ex Oliv. & Hiern) C. Jeffrey  #>  #> # synonyms (2):  #> 53821 Sonchus exauriculatus (Oliv. & Hiern) O. Hoffm.  #> 53843 Sonchus bipontini var. pinnatifidus Oliv. & Hiern  #> ------------------------------ sp_list <- delete_name(sp_list, 53821) summary(sp_list, \"Launaea cornuta\") #> ------------------------------  #> concept ID: 355  #> view ID: 1  #> level: species  #> parent: 54923 Launaea Cass.  #>  #> # accepted name:  #> 355 Launaea cornuta (Hochst. ex Oliv. & Hiern) C. Jeffrey  #>  #> # synonyms (1):  #> 53843 Sonchus bipontini var. pinnatifidus Oliv. & Hiern  #> ------------------------------  ## Hypothetical correction in author name in Launaea cornuta sp_list <- update_name(taxlist = sp_list, UsageID = 355, AuthorName = \"L.\") summary(sp_list, \"Launaea cornuta\") #> ------------------------------  #> concept ID: 355  #> view ID: 1  #> level: species  #> parent: 54923 Launaea Cass.  #>  #> # accepted name:  #> 355 Launaea cornuta L.  #>  #> # synonyms (1):  #> 53843 Sonchus bipontini var. pinnatifidus Oliv. & Hiern  #> ------------------------------"},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","title":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","text":"Retrieve content slot taxonRelations taxlist object replace new data frame.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","text":"","code":"taxon_relations(taxlist, ...)  # S3 method for taxlist taxon_relations(taxlist, ...)  taxon_relations(taxlist, ...) <- value  # S3 method for taxlist taxon_relations(taxlist, ...) <- value  # S4 method for taxlist,numeric update_concept(taxlist, ConceptID, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","text":"taxlist taxlist object. ... arguments passed among methods. value data.frame object set slot taxonRelations. ConceptID Concept IDs updated.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","text":"object class taxlist added names concepts.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_relations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","text":"replacement method taxon_relations<- used constructing taxlist objects empty one (prototype). New concepts first added taxlist object using respective accepted names. Synonyms can provided using function add_synonym(). Additional named vectors can provided included slot taxonNames, cases variables already exist, otherwise ignored. recommended also provide concept view ViewID (see taxon_views()). adding new view, use add_view().","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_relations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_relations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve or replace slot taxonRelations in taxlist objects — taxon_relations","text":"","code":"## Subset for the genus Euclea and display of slot 'taxonNames' Euclea <- subset(x = Easplist, subset = charmatch(\"Euclea\", TaxonName),   slot = \"names\", keep_children = TRUE) Euclea #> object size: 7 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 3  #> number of taxon concepts: 2  #> trait entries: 0  #> number of trait variables: 1  #> taxon views: 3  #>  #> concepts with parents: 1  #> concepts with children: 1  #>  #> hierarchical levels: form < variety < subspecies < species < complex < genus < family  #> number of concepts in level form: 0 #> number of concepts in level variety: 0 #> number of concepts in level subspecies: 0 #> number of concepts in level species: 1 #> number of concepts in level complex: 0 #> number of concepts in level genus: 1 #> number of concepts in level family: 0 #>  taxon_relations(Euclea) #>      TaxonConceptID AcceptedName Basionym Parent   Level ViewID #> 267             269          269       NA  55707 species      1 #> 3537          55707        55709       NA     NA   genus     NA"},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_traits.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulation of taxon traits in taxlist objects. — taxon_traits","title":"Manipulation of taxon traits in taxlist objects. — taxon_traits","text":"slot taxonTraits taxlist objects contains attributes taxon concepts (e.g. functional traits). functions suitable replacing, retrieving appending trait information taxonomic lists.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_traits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulation of taxon traits in taxlist objects. — taxon_traits","text":"","code":"taxon_traits(taxlist, ...)  # S3 method for taxlist taxon_traits(taxlist, ...)  taxon_traits(taxlist, ...) <- value  # S3 method for taxlist taxon_traits(taxlist, ...) <- value  update_trait(taxlist, ...)  # S3 method for taxlist update_trait(taxlist, taxonTraits, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_traits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulation of taxon traits in taxlist objects. — taxon_traits","text":"taxlist taxlist object. ... arguments passed among methods. value Data frame set slot taxonTraits. taxonTraits data frame taxon traits inserted 'taxlist'. column 'TaxonConceptID' mandatory table. taxon concept IDs occurring 'taxlist', error message retrieved update_trait().","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_traits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manipulation of taxon traits in taxlist objects. — taxon_traits","text":"Taxon traits contained data frame slot taxonTraits taxlist objects. optimise space, data frame contain entries concepts information, taxa information skipped table. Thus appending new variables may also include new rows slot, automatically carried function. replacement method taxon_traits<- used constructing taxlist objects empty one.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_traits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Manipulation of taxon traits in taxlist objects. — taxon_traits","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_traits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulation of taxon traits in taxlist objects. — taxon_traits","text":"","code":"## Displaying taxon traits head(taxon_traits(Easplist)) #>   TaxonConceptID          life_form #> 1              7       phanerophyte #> 2              9       phanerophyte #> 3             18 facultative_annual #> 4             20 facultative_annual #> 5             21    obligate_annual #> 6             22        chamaephyte  ## Updating traits for Launaea cornuta summary(Easplist, \"Launaea cornuta\") #> ------------------------------  #> concept ID: 355  #> view ID: 1  #> level: species  #> parent: 54923 Launaea Cass.  #>  #> # accepted name:  #> 355 Launaea cornuta (Hochst. ex Oliv. & Hiern) C. Jeffrey  #>  #> # synonyms (2):  #> 53821 Sonchus exauriculatus (Oliv. & Hiern) O. Hoffm.  #> 53843 Sonchus bipontini var. pinnatifidus Oliv. & Hiern  #> ------------------------------ accepted_name(taxlist = Easplist, ConceptID = 355, show_traits = TRUE) #>   TaxonConceptID TaxonUsageID       TaxonName #> 1            355          355 Launaea cornuta #>                              AuthorName ViewID   Level     life_form #> 1 (Hochst. ex Oliv. & Hiern) C. Jeffrey      1 species tussock_plant  sp_list <- update_trait(taxlist = Easplist, taxonTraits = data.frame(         TaxonConceptID = 355,         life_form = \"annual\")) accepted_name(taxlist = sp_list, ConceptID = 355, show_traits = TRUE) #>   TaxonConceptID TaxonUsageID       TaxonName #> 1            355          355 Launaea cornuta #>                              AuthorName ViewID   Level life_form #> 1 (Hochst. ex Oliv. & Hiern) C. Jeffrey      1 species    annual"},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":null,"dir":"Reference","previous_headings":"","what":"Management of concept views in taxonomic lists. — taxon_views","title":"Management of concept views in taxonomic lists. — taxon_views","text":"Retrieve replace slot taxonViews object class taxlist","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Management of concept views in taxonomic lists. — taxon_views","text":"","code":"taxon_views(taxlist, ...)  # S3 method for taxlist taxon_views(taxlist, ...)  taxon_views(taxlist, ...) <- value  # S3 method for taxlist taxon_views(taxlist, ...) <- value  add_view(taxlist, taxonViews, ...)  # S4 method for taxlist,data.frame add_view(taxlist, taxonViews, ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Management of concept views in taxonomic lists. — taxon_views","text":"taxlist taxlist object. ... arguments passed among methods. value object class data.frame containing references used define circumscription taxon concepts included taxlist. taxonViews data frame taxon views inserted 'taxlist'.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Management of concept views in taxonomic lists. — taxon_views","text":"object class taxlist added views.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Management of concept views in taxonomic lists. — taxon_views","text":"Taxon views indicate taxlist objects references determining circumscription respective taxon concepts. adding new concept (see add_concept()), respective reference may yet occur input taxlist object. term taxon view introduced Zhong et al. (1996) corresponds reference used definition concept. function retrieves slot taxonViews objects class taxlist. replacement method taxon_views<- replaces whole content slot taxonViews recommended use constructing new taxlist object empty prototype.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Management of concept views in taxonomic lists. — taxon_views","text":"Zhong Y, Jung S, Pramanik S, Beaman JH (1996). Data model comparison query methods interacting classifications taxonomic database. Taxon 45: 223--241. doi:10.1093/bioinformatics/15.2.149","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Management of concept views in taxonomic lists. — taxon_views","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/taxon_views.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Management of concept views in taxonomic lists. — taxon_views","text":"","code":"## See existing views taxon_views(Easplist) #>   ViewID                                 secundum view_bibtexkey #> 1      1            African Plant Database (2012)  CJBGSANBI2012 #> 2      2 Taxonomic Name Resolution Service (2018)       TNRS2018 #> 3      3                    The Plant List (2013)        TPL2013  ## Add a new view sp_list <- add_view(taxlist = Easplist, taxonViews = data.frame(         secundum = \"Beentje et al. (1952)\",         Title = \"Flora of Tropical East Africa\",         URL = \"http://www.kew.org/science/directory/projects/FloraTropEAfrica.html\"))  taxon_views(sp_list) #>   ViewID                                 secundum view_bibtexkey #> 1      1            African Plant Database (2012)  CJBGSANBI2012 #> 2      2 Taxonomic Name Resolution Service (2018)       TNRS2018 #> 3      3                    The Plant List (2013)        TPL2013 #> 4      4                    Beentje et al. (1952)           <NA> #>                           Title #> 1                          <NA> #> 2                          <NA> #> 3                          <NA> #> 4 Flora of Tropical East Africa #>                                                                   URL #> 1                                                                <NA> #> 2                                                                <NA> #> 3                                                                <NA> #> 4 http://www.kew.org/science/directory/projects/FloraTropEAfrica.html"},{"path":"https://docs.ropensci.org/taxlist/reference/tv2taxlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Import species lists from Turboveg databases — tv2taxlist","title":"Import species lists from Turboveg databases — tv2taxlist","text":"Importing species lists Turboveg 2 databases taxlist object. Internally funcions read.dbf() df2taxlist() called.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tv2taxlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import species lists from Turboveg databases — tv2taxlist","text":"","code":"tv2taxlist(taxlist, tv_home = tv.home(), ...)"},{"path":"https://docs.ropensci.org/taxlist/reference/tv2taxlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import species lists from Turboveg databases — tv2taxlist","text":"taxlist Character value indicating name species list Turboveg. tv_home Character value indicating path main Turboveg folder. default function tv.home() vegdata-package called. ... arguments passed df2taxlist().","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tv2taxlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import species lists from Turboveg databases — tv2taxlist","text":"taxlist object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/reference/tv2taxlist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import species lists from Turboveg databases — tv2taxlist","text":"Miguel Alvarez kamapu78@gmail.com","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/tv2taxlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import species lists from Turboveg databases — tv2taxlist","text":"","code":"## Cyperus data set installed as Turboveg species list Cyperus <- tv2taxlist(taxlist = \"cyperus\",   tv_home = file.path(path.package(\"taxlist\"), \"tv_data\")) Cyperus #> object size: 44.6 Kb  #> validation of 'taxlist' object: TRUE  #>  #> number of taxon usage names: 95  #> number of taxon concepts: 42  #> trait entries: 42  #> number of trait variables: 2  #> taxon views: 0  #>"},{"path":"https://docs.ropensci.org/taxlist/reference/two2one_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Inserting new rows and columns by merging two data frames — two2one_df","title":"Inserting new rows and columns by merging two data frames — two2one_df","text":"Two data frames sharing partially columns merged including sum variables.","code":""},{"path":"https://docs.ropensci.org/taxlist/reference/two2one_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inserting new rows and columns by merging two data frames — two2one_df","text":"","code":"two2one_df(x, y)"},{"path":"https://docs.ropensci.org/taxlist/reference/two2one_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inserting new rows and columns by merging two data frames — two2one_df","text":"x, y (data.frame) data frames merged.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-2-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.2.5","text":"New function prune_levels() pruning levels used taxlist objects. New function merge_to_parent() merging multiple taxa respective parents. New function sort_backups() retrieving sorted list backups written backup_object(). New function taxlist2df() converting taxlist objects data frames.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-2-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.2.5","text":"Function merge_taxa() can now used query list taxonomic ranks. enabled argument level. new argument delelte_nomatch function merge_taxa() delete top ranks rankless taxa. Function backup_object() retrieves invisible vector information written backup. Function load_last() retrieves invisible data frame information imported backup. also include new argument choice select different backup list produced sort_backups().","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-024","dir":"Changelog","previous_headings":"","what":"taxlist 0.2.4","title":"taxlist 0.2.4","text":"CRAN release: 2023-03-12","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-2-4","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.2.4","text":"New S3 class matched_names inheriting data frame properties. class used interactive selection multiple choices, name matches one candidate. Character identifiers (primary keys) enabled. New functions id_generator() create vectors identifiers, either numeric values (integers) character values using random strings. New function id_solver() compare vectors identifiers recipient database data set inserted mentioned database. function propose modified vector new data avoid conflicts duplicated IDs. Coercion taxlist objects data.frame objects.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-2-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.2.4","text":"validation taxlist objects also looking Parent IDs missing object. Function match_names() displays multiple matchings per name also works comparing string . Simplified coercion form to_class <- (obj, from_class). Function tnrs() deprecated. Simplified coercion form to_class <- (obj, from_class) Function add_concept() method data.frame objects.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-023","dir":"Changelog","previous_headings":"","what":"taxlist 0.2.3","title":"taxlist 0.2.3","text":"CRAN release: 2022-09-12","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-2-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.2.3","text":"New arguments isolate trim prevent parts scientific names formatted italics.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-2-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.2.3","text":"Function match_names() allows sort output data frame 'character,taxlist-method'. Slot taxonViews allowing class lib_df package biblio. function summary(), using text query, new parameter exact allow querying exact name, usefull querying genera. New style scripts using package styler. Name taxon attribute lf_behn_2018 changed life_form. Function print_name() now working one name (vectorized) reset S3 method, including option character vectors. Function df2taxlist() redefined allow import single data frame.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-022","dir":"Changelog","previous_headings":"","what":"taxlist 0.2.2","title":"taxlist 0.2.2","text":"CRAN release: 2021-07-15","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"taxlist 0.2.2","text":"Functions taxlist2taxmap() taxmap2taxlist() temporarily deprecated due conflicts release taxa v. 0.4.0","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-021","dir":"Changelog","previous_headings":"","what":"taxlist 0.2.1","title":"taxlist 0.2.1","text":"CRAN release: 2021-03-29","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.2.1","text":"New function indented_list() print taxonomic ranks indented lists.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-2-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.2.1","text":"New argument repaste function dissect_name() re-pasting dissected names. Function replace_idx() setting default idx1 = x. Functions replace_idx() replace_na() setting default idx2 = idx1. Special characters corrected data set Cyperus. Validation allowing taxa without rank parents.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-020","dir":"Changelog","previous_headings":"","what":"taxlist 0.2.0","title":"taxlist 0.2.0","text":"CRAN release: 2020-10-07","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.2.0","text":"Several improvements meet ROpenSci requirements documented .","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-019","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.9","title":"taxlist 0.1.9","text":"CRAN release: 2020-05-31","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"bug-fixes-0-1-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"taxlist 0.1.9","text":"Problems encoding data set Easplist","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-018","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.8","title":"taxlist 0.1.8","text":"CRAN release: 2020-04-29","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-8","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.8","text":"Function taxlist2taxmap() interaction packages taxlist taxmap. Function taxmap2taxlist() conversion Taxmap objects taxlist ones.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-8","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.8","text":"Roxygenized version. Method formula function count_taxa(). New argument fext function backup_object() setting extension backup file.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-017","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.7","title":"taxlist 0.1.7","text":"CRAN release: 2020-01-10","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-7","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.7","text":"Method character values function match_names(). Set functions data manipulation, namely replace_x(), replace_idx(), replace_na(), insert_rows(). Function clean() new argument times repeat cleaning taxlist objects.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-7","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.7","text":"Warning function tax2traits() objects without taxonomic ranks. Second argument function [ applies slot taxonTraits. Replacement method functions [ $ deprecated. Method function $ matches taxon concepts retrieving information slot taxonTraits. Missing argument idx2 set idx1 functions replace_idx() replace_na(). Function replace_view() deprecated. Example data set cleaned (specifically author names)","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"bug-fixes-0-1-7","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"taxlist 0.1.7","text":"Function match_names() properly working option accepted_only=TRUE. Function merge_taxa() caused orphaned children replaced taxon concepts. Function clean() working deleted names.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-016","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.6","title":"taxlist 0.1.6","text":"CRAN release: 2019-01-21","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.6","text":"New function count_taxa()","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-6","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.6","text":"new option style=\"knitr\" function print_name() (See issue Stack Overflow). function backup_object(), message done successful saving . New argument accepted_only function match_names(), comparing strings accepted names. Error message NA’s argument x function match_names()","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"bugs-fixes-0-1-6","dir":"Changelog","previous_headings":"","what":"Bugs Fixes","title":"taxlist 0.1.6","text":"Function add_synonym() properly working incomplete entries (missing variables replacement values.) Function load_last() properly working values file without mention subfolder. Function accepted_name() option show_traits=TRUE displaying taxa entries taxon traits. Prototype object taxlist wrongly included slot hierarchy.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-015","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.5","title":"taxlist 0.1.5","text":"CRAN release: 2018-06-29","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.5","text":"CITATION file included installation. New method replace_view. New method print_name formatting taxon names italic style. New method update_name, updating information slot taxonNames. New method synonyms retrieving synonyms indicated concepts. New method delete_name deleting synonyms taxlist objects. New method basionym handling basionyms.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.5","text":"Function accepted_name retrieves also information Level (taxonomic rank) traits (optional argument show_traits). Function summary single taxon displaying name parent taxon (accepted name) optional string taxon view. Function backup_object prints message console. Related functions join documentation files. Data set Easplist adapted new state database SWEA-Dataveg. Function match_names counts multiple best matchings includes new argument show_concepts displaying respective accepted names taxon concept ID.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"bugs-fixes-0-1-5","dir":"Changelog","previous_headings":"","what":"Bugs Fixes","title":"taxlist 0.1.5","text":"Function load_last working single files suffix, neither absolute path paths underscores. Function summary single taxa displaying names homonyms accepted name. Re-organized documentation.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-014","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.4","title":"taxlist 0.1.4","text":"CRAN release: 2018-05-03","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-4","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.4","text":"New function load_last load last backup R-session. File inst/ChangeLog replaced NEWS.md. New function dissect_name splitting names parts. New function match_names matching character vectors names taxlist object.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.4","text":"Function backup_object also working relative paths.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"bugs-fixes-0-1-4","dir":"Changelog","previous_headings":"","what":"Bugs Fixes","title":"taxlist 0.1.4","text":"Function add_view adding new columns respective slot. Function tv2taxlist modify slot taxonViews prototype. Function load_last working values filename underscores.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-013","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.3","title":"taxlist 0.1.3","text":"CRAN release: 2018-01-05","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.3","text":"New function: add_trait. New function: tax2traits.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.3","text":"Argument level inserted function merge_taxa. Function clean also set keys class integer. Validation checks existence accepted names names list.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"bugs-fixes-0-1-3","dir":"Changelog","previous_headings":"","what":"Bugs Fixes","title":"taxlist 0.1.3","text":"Bug add_concept: wrong assignment AcceptedName.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-012","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.2","title":"taxlist 0.1.2","text":"CRAN release: 2017-08-06","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.2","text":"new function merge_taxa.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.2","text":"Argument ConceptID summary (taxlis-method) can character vector matching TaxonName.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-011","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.1","title":"taxlist 0.1.1","text":"CRAN release: 2017-07-23","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.1","text":"New vignette taxlist-intro.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"improvements-0-1-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"taxlist 0.1.1","text":"Package vegdata moved Depends Imports. Function df2taxlist adapted species lists duplicated names. Arguments keep_parents keep_children implemented function subset.","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"taxlist-010","dir":"Changelog","previous_headings":"","what":"taxlist 0.1.0","title":"taxlist 0.1.0","text":"CRAN release: 2017-06-14","code":""},{"path":"https://docs.ropensci.org/taxlist/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"taxlist 0.1.0","text":"Released CRAN (https://cran.r-project.org/package=taxlist).","code":""}]
